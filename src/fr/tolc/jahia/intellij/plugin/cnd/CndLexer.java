/* The following code was generated by JFlex 1.4.3 on 03/10/16 21:40 */

package fr.tolc.jahia.intellij.plugin.cnd;

import com.intellij.lexer.FlexLexer;
import com.intellij.psi.tree.IElementType;
import fr.tolc.jahia.intellij.plugin.cnd.psi.CndTypes;
import com.intellij.psi.TokenType;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 03/10/16 21:40 from the specification file
 * <tt>E:/Projects/Smile/IntelliJ_Jahia_plugin/src/fr/tolc/jahia/intellij/plugin/cnd/Cnd.flex</tt>
 */
class CndLexer implements FlexLexer {
  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int PROPERTY_ATTRIBUTES = 34;
  public static final int PROPERTY_DEFAULT_VALUE = 32;
  public static final int PROPERTY_MASK_OPTION_NAME = 26;
  public static final int NODE_NAMESPACE = 40;
  public static final int NAMESPACE = 2;
  public static final int PROPERTY_TYPE = 24;
  public static final int NODE_DEFAULT_VALUE = 48;
  public static final int NODE_DEFAULT_VALUE_NAMESPACE = 46;
  public static final int ITEMTYPE = 20;
  public static final int SUPER_TYPES_NAMESPACE = 8;
  public static final int EXTEND_NAMESPACE = 16;
  public static final int NODETYPE = 6;
  public static final int PROPERTY_MASK_OPTION = 28;
  public static final int NODE_ATTRIBUTES = 50;
  public static final int PROPERTY_CONSTRAINT = 36;
  public static final int SUPER_TYPES = 10;
  public static final int NODE_DEFAULT = 44;
  public static final int OPTIONS = 12;
  public static final int NODETYPE_NAMESPACE = 4;
  public static final int EXTENDS = 14;
  public static final int EXTEND = 18;
  public static final int YYINITIAL = 0;
  public static final int PROPERTY = 22;
  public static final int PROPERTY_DEFAULT = 30;
  public static final int NODE_NODETYPE = 42;
  public static final int NODE = 38;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2,  2,  3,  3,  4,  4,  5,  5,  6,  6,  7,  7, 
     8,  8,  9,  9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 
    16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 
    24, 24, 25, 25
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\7\1\3\1\1\1\0\1\3\1\2\16\7\4\0\1\46\3\0"+
    "\1\6\2\0\1\40\1\61\1\62\1\5\1\63\1\52\1\54\1\44"+
    "\1\4\1\56\1\32\6\56\1\33\1\56\1\53\1\0\1\50\1\37"+
    "\1\51\2\0\1\14\1\15\1\21\1\23\1\24\1\36\1\45\1\35"+
    "\1\11\1\55\1\41\1\25\1\10\1\13\1\22\1\31\1\26\1\20"+
    "\1\16\1\17\1\27\1\47\1\42\1\12\1\30\1\34\1\57\1\0"+
    "\1\60\1\0\1\55\1\0\1\14\1\15\1\21\1\23\1\24\1\36"+
    "\1\45\1\35\1\11\1\55\1\41\1\25\1\10\1\13\1\22\1\31"+
    "\1\26\1\20\1\16\1\17\1\27\1\47\1\42\1\12\1\30\1\34"+
    "\4\0\41\7\2\0\4\6\4\0\1\6\2\0\1\7\7\0\1\6"+
    "\4\0\1\6\5\0\27\6\1\0\37\6\1\0\u01ca\6\4\0\14\6"+
    "\16\0\5\6\7\0\1\6\1\0\1\6\21\0\160\7\5\6\1\0"+
    "\2\6\2\0\4\6\10\0\1\6\1\0\3\6\1\0\1\6\1\0"+
    "\24\6\1\0\123\6\1\0\213\6\1\0\5\7\2\0\236\6\11\0"+
    "\46\6\2\0\1\6\7\0\47\6\7\0\1\6\1\0\55\7\1\0"+
    "\1\7\1\0\2\7\1\0\2\7\1\0\1\7\10\0\33\6\5\0"+
    "\3\6\15\0\5\7\6\0\1\6\4\0\13\7\5\0\53\6\25\7"+
    "\12\43\4\0\2\6\1\7\143\6\1\0\1\6\10\7\1\0\6\7"+
    "\2\6\2\7\1\0\4\7\2\6\12\43\3\6\2\0\1\6\17\0"+
    "\1\7\1\6\1\7\36\6\33\7\2\0\131\6\13\7\1\6\16\0"+
    "\12\43\41\6\11\7\2\6\4\0\1\6\5\0\26\6\4\7\1\6"+
    "\11\7\1\6\3\7\1\6\5\7\22\0\31\6\3\7\104\0\1\6"+
    "\1\0\13\6\67\0\33\7\1\0\4\7\66\6\3\7\1\6\22\7"+
    "\1\6\7\7\12\6\2\7\2\0\12\43\1\0\7\6\1\0\7\6"+
    "\1\0\3\7\1\0\10\6\2\0\2\6\2\0\26\6\1\0\7\6"+
    "\1\0\1\6\3\0\4\6\2\0\1\7\1\6\7\7\2\0\2\7"+
    "\2\0\3\7\1\6\10\0\1\7\4\0\2\6\1\0\3\6\2\7"+
    "\2\0\12\43\4\6\7\0\1\6\5\0\3\7\1\0\6\6\4\0"+
    "\2\6\2\0\26\6\1\0\7\6\1\0\2\6\1\0\2\6\1\0"+
    "\2\6\2\0\1\7\1\0\5\7\4\0\2\7\2\0\3\7\3\0"+
    "\1\7\7\0\4\6\1\0\1\6\7\0\12\43\2\7\3\6\1\7"+
    "\13\0\3\7\1\0\11\6\1\0\3\6\1\0\26\6\1\0\7\6"+
    "\1\0\2\6\1\0\5\6\2\0\1\7\1\6\10\7\1\0\3\7"+
    "\1\0\3\7\2\0\1\6\17\0\2\6\2\7\2\0\12\43\1\0"+
    "\1\6\17\0\3\7\1\0\10\6\2\0\2\6\2\0\26\6\1\0"+
    "\7\6\1\0\2\6\1\0\5\6\2\0\1\7\1\6\7\7\2\0"+
    "\2\7\2\0\3\7\10\0\2\7\4\0\2\6\1\0\3\6\2\7"+
    "\2\0\12\43\1\0\1\6\20\0\1\7\1\6\1\0\6\6\3\0"+
    "\3\6\1\0\4\6\3\0\2\6\1\0\1\6\1\0\2\6\3\0"+
    "\2\6\3\0\3\6\3\0\14\6\4\0\5\7\3\0\3\7\1\0"+
    "\4\7\2\0\1\6\6\0\1\7\16\0\12\43\11\0\1\6\7\0"+
    "\3\7\1\0\10\6\1\0\3\6\1\0\27\6\1\0\12\6\1\0"+
    "\5\6\3\0\1\6\7\7\1\0\3\7\1\0\4\7\7\0\2\7"+
    "\1\0\2\6\6\0\2\6\2\7\2\0\12\43\22\0\2\7\1\0"+
    "\10\6\1\0\3\6\1\0\27\6\1\0\12\6\1\0\5\6\2\0"+
    "\1\7\1\6\7\7\1\0\3\7\1\0\4\7\7\0\2\7\7\0"+
    "\1\6\1\0\2\6\2\7\2\0\12\43\1\0\2\6\17\0\2\7"+
    "\1\0\10\6\1\0\3\6\1\0\51\6\2\0\1\6\7\7\1\0"+
    "\3\7\1\0\4\7\1\6\10\0\1\7\10\0\2\6\2\7\2\0"+
    "\12\43\12\0\6\6\2\0\2\7\1\0\22\6\3\0\30\6\1\0"+
    "\11\6\1\0\1\6\2\0\7\6\3\0\1\7\4\0\6\7\1\0"+
    "\1\7\1\0\10\7\22\0\2\7\15\0\60\6\1\7\2\6\7\7"+
    "\4\0\10\6\10\7\1\0\12\43\47\0\2\6\1\0\1\6\2\0"+
    "\2\6\1\0\1\6\2\0\1\6\6\0\4\6\1\0\7\6\1\0"+
    "\3\6\1\0\1\6\1\0\1\6\2\0\2\6\1\0\4\6\1\7"+
    "\2\6\6\7\1\0\2\7\1\6\2\0\5\6\1\0\1\6\1\0"+
    "\6\7\2\0\12\43\2\0\4\6\40\0\1\6\27\0\2\7\6\0"+
    "\12\43\13\0\1\7\1\0\1\7\1\0\1\7\4\0\2\7\10\6"+
    "\1\0\44\6\4\0\24\7\1\0\2\7\5\6\13\7\1\0\44\7"+
    "\11\0\1\7\71\0\53\6\24\7\1\6\12\43\6\0\6\6\4\7"+
    "\4\6\3\7\1\6\3\7\2\6\7\7\3\6\4\7\15\6\14\7"+
    "\1\6\1\7\12\43\4\7\2\0\46\6\1\0\1\6\5\0\1\6"+
    "\2\0\53\6\1\0\u014d\6\1\0\4\6\2\0\7\6\1\0\1\6"+
    "\1\0\4\6\2\0\51\6\1\0\4\6\2\0\41\6\1\0\4\6"+
    "\2\0\7\6\1\0\1\6\1\0\4\6\2\0\17\6\1\0\71\6"+
    "\1\0\4\6\2\0\103\6\2\0\3\7\40\0\20\6\20\0\125\6"+
    "\14\0\u026c\6\2\0\21\6\1\0\32\6\5\0\113\6\3\0\3\6"+
    "\17\0\15\6\1\0\4\6\3\7\13\0\22\6\3\7\13\0\22\6"+
    "\2\7\14\0\15\6\1\0\3\6\1\0\2\7\14\0\64\6\40\7"+
    "\3\0\1\6\3\0\2\6\1\7\2\0\12\43\41\0\3\7\2\0"+
    "\12\43\6\0\130\6\10\0\51\6\1\7\1\6\5\0\106\6\12\0"+
    "\35\6\3\0\14\7\4\0\14\7\12\0\12\43\36\6\2\0\5\6"+
    "\13\0\54\6\4\0\21\7\7\6\2\7\6\0\12\43\46\0\27\6"+
    "\5\7\4\0\65\6\12\7\1\0\35\7\2\0\1\7\12\43\6\0"+
    "\12\43\15\0\1\6\130\0\5\7\57\6\21\7\7\6\4\0\12\43"+
    "\21\0\11\7\14\0\3\7\36\6\15\7\2\6\12\43\54\6\16\7"+
    "\14\0\44\6\24\7\10\0\12\43\3\0\3\6\12\43\44\6\122\0"+
    "\3\7\1\0\25\7\4\6\1\7\4\6\3\7\2\6\11\0\300\6"+
    "\47\7\25\0\4\7\u0116\6\2\0\6\6\2\0\46\6\2\0\6\6"+
    "\2\0\10\6\1\0\1\6\1\0\1\6\1\0\1\6\1\0\37\6"+
    "\2\0\65\6\1\0\7\6\1\0\1\6\3\0\3\6\1\0\7\6"+
    "\3\0\4\6\2\0\6\6\4\0\15\6\5\0\3\6\1\0\7\6"+
    "\16\0\5\7\32\0\5\7\20\0\2\6\23\0\1\6\13\0\5\7"+
    "\5\0\6\7\1\0\1\6\15\0\1\6\20\0\15\6\3\0\33\6"+
    "\25\0\15\7\4\0\1\7\3\0\14\7\21\0\1\6\4\0\1\6"+
    "\2\0\12\6\1\0\1\6\3\0\5\6\6\0\1\6\1\0\1\6"+
    "\1\0\1\6\1\0\4\6\1\0\13\6\2\0\4\6\5\0\5\6"+
    "\4\0\1\6\21\0\51\6\u0a77\0\57\6\1\0\57\6\1\0\205\6"+
    "\6\0\4\6\3\7\2\6\14\0\46\6\1\0\1\6\5\0\1\6"+
    "\2\0\70\6\7\0\1\6\17\0\1\7\27\6\11\0\7\6\1\0"+
    "\7\6\1\0\7\6\1\0\7\6\1\0\7\6\1\0\7\6\1\0"+
    "\7\6\1\0\7\6\1\0\40\7\57\0\1\6\u01d5\0\3\6\31\0"+
    "\11\6\6\7\1\0\5\6\2\0\5\6\4\0\126\6\2\0\2\7"+
    "\2\0\3\6\1\0\132\6\1\0\4\6\5\0\51\6\3\0\136\6"+
    "\21\0\33\6\65\0\20\6\u0200\0\u19b6\6\112\0\u51cd\6\63\0\u048d\6"+
    "\103\0\56\6\2\0\u010d\6\3\0\20\6\12\43\2\6\24\0\57\6"+
    "\1\7\4\0\12\7\1\0\31\6\7\0\1\7\120\6\2\7\45\0"+
    "\11\6\2\0\147\6\2\0\4\6\1\0\4\6\14\0\13\6\115\0"+
    "\12\6\1\7\3\6\1\7\4\6\1\7\27\6\5\7\20\0\1\6"+
    "\7\0\64\6\14\0\2\7\62\6\21\7\13\0\12\43\6\0\22\7"+
    "\6\6\3\0\1\6\4\0\12\43\34\6\10\7\2\0\27\6\15\7"+
    "\14\0\35\6\3\0\4\7\57\6\16\7\16\0\1\6\12\43\46\0"+
    "\51\6\16\7\11\0\3\6\1\7\10\6\2\7\2\0\12\43\6\0"+
    "\27\6\3\0\1\6\1\7\4\0\60\6\1\7\1\6\3\7\2\6"+
    "\2\7\5\6\2\7\1\6\1\7\1\6\30\0\3\6\2\0\13\6"+
    "\5\7\2\0\3\6\2\7\12\0\6\6\2\0\6\6\2\0\6\6"+
    "\11\0\7\6\1\0\7\6\221\0\43\6\10\7\1\0\2\7\2\0"+
    "\12\43\6\0\u2ba4\6\14\0\27\6\4\0\61\6\u2104\0\u016e\6\2\0"+
    "\152\6\46\0\7\6\14\0\5\6\5\0\1\6\1\7\12\6\1\0"+
    "\15\6\1\0\5\6\1\0\1\6\1\0\2\6\1\0\2\6\1\0"+
    "\154\6\41\0\u016b\6\22\0\100\6\2\0\66\6\50\0\15\6\3\0"+
    "\20\7\20\0\7\7\14\0\2\6\30\0\3\6\31\0\1\6\6\0"+
    "\5\6\1\0\207\6\2\0\1\7\4\0\1\6\13\0\12\43\7\0"+
    "\32\6\4\0\1\6\1\0\32\6\13\0\131\6\3\0\6\6\2\0"+
    "\6\6\2\0\6\6\2\0\3\6\3\0\2\6\3\0\2\6\22\0"+
    "\3\7\4\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\32\0\1\1\2\2\1\3\7\1\1\4\1\5\1\6"+
    "\1\7\1\1\2\10\1\11\1\12\1\13\1\14\5\15"+
    "\1\16\1\17\1\20\5\21\1\22\4\1\1\23\1\24"+
    "\1\25\6\1\2\26\1\27\14\1\1\30\1\31\1\32"+
    "\16\1\3\33\1\1\1\34\14\1\1\35\1\1\1\36"+
    "\21\37\15\1\1\40\2\41\1\42\1\43\1\44\1\45"+
    "\6\1\1\46\1\1\1\47\1\50\7\1\1\51\7\0"+
    "\1\10\4\15\4\21\67\0\1\33\25\0\24\37\1\0"+
    "\1\37\57\0\1\10\4\15\4\21\21\0\1\52\14\0"+
    "\1\53\32\0\1\33\32\0\33\37\40\0\1\54\12\0"+
    "\1\55\4\0\1\51\6\0\1\10\4\15\4\21\17\0"+
    "\1\52\6\0\1\53\4\0\1\52\1\0\1\56\5\0"+
    "\1\56\22\0\1\57\21\0\6\37\1\57\21\37\6\0"+
    "\1\60\43\0\1\61\5\0\1\10\1\0\1\61\3\15"+
    "\1\61\3\21\1\62\102\0\25\37\53\0\3\15\3\21"+
    "\10\0\1\63\55\0\17\37\37\0\1\64\1\0\2\15"+
    "\2\21\47\0\1\57\4\0\10\37\1\57\4\37\10\0"+
    "\1\60\14\0\1\65\1\0\1\66\1\15\1\21\23\0"+
    "\1\56\14\0\14\37\30\0\1\56\14\0\1\57\3\0"+
    "\7\37\1\57\2\37\10\0\1\60\16\0\1\57\10\0"+
    "\1\37\1\57\6\37\1\0\1\60\32\0\6\37\35\0"+
    "\10\37\37\0\7\37\30\0\4\37\23\0\3\37\17\0"+
    "\2\37\12\0\1\37\12\0";

  private static int [] zzUnpackAction() {
    int [] result = new int[1340];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\64\0\150\0\234\0\320\0\u0104\0\u0138\0\u016c"+
    "\0\u01a0\0\u01d4\0\u0208\0\u023c\0\u0270\0\u02a4\0\u02d8\0\u030c"+
    "\0\u0340\0\u0374\0\u03a8\0\u03dc\0\u0410\0\u0444\0\u0478\0\u04ac"+
    "\0\u04e0\0\u0514\0\u0548\0\u0548\0\u057c\0\u05b0\0\u05e4\0\u0618"+
    "\0\u064c\0\u0680\0\u06b4\0\u06e8\0\u071c\0\u0548\0\u0548\0\u0548"+
    "\0\u0548\0\u0750\0\u0784\0\u07b8\0\u0548\0\u0548\0\u0548\0\u07ec"+
    "\0\u0820\0\u0854\0\u0888\0\u08bc\0\u08f0\0\u0548\0\u0548\0\u0548"+
    "\0\u0924\0\u0958\0\u098c\0\u09c0\0\u09f4\0\u0548\0\u0a28\0\u0a5c"+
    "\0\u0a90\0\u0ac4\0\u0548\0\u0af8\0\u0548\0\u0b2c\0\u0b60\0\u0b94"+
    "\0\u0bc8\0\u0bfc\0\u0c30\0\u0548\0\u0c64\0\u0548\0\u0c98\0\u0ccc"+
    "\0\u0d00\0\u0d34\0\u0d68\0\u0d9c\0\u0dd0\0\u0e04\0\u0e38\0\u0e6c"+
    "\0\u0ea0\0\u0ed4\0\u0548\0\u0548\0\u0548\0\u0f08\0\u0f3c\0\u0f70"+
    "\0\u0fa4\0\u0fd8\0\u100c\0\u1040\0\u1074\0\u10a8\0\u10dc\0\u1110"+
    "\0\u1144\0\u1178\0\u11ac\0\u11e0\0\u1214\0\u1248\0\u127c\0\u0548"+
    "\0\u12b0\0\u12e4\0\u1318\0\u134c\0\u1380\0\u13b4\0\u13e8\0\u141c"+
    "\0\u1450\0\u1484\0\u14b8\0\u14ec\0\u0548\0\u1520\0\u0548\0\u1554"+
    "\0\u1588\0\u15bc\0\u15f0\0\u1624\0\u1658\0\u168c\0\u16c0\0\u16f4"+
    "\0\u1728\0\u175c\0\u1790\0\u17c4\0\u17f8\0\u182c\0\u1860\0\u1894"+
    "\0\u18c8\0\u18fc\0\u1930\0\u1964\0\u1998\0\u19cc\0\u1a00\0\u1a34"+
    "\0\u1a68\0\u1a9c\0\u1ad0\0\u1b04\0\u1b38\0\u1b6c\0\u0548\0\u1ba0"+
    "\0\u0548\0\u1bd4\0\u0548\0\u0548\0\u1c08\0\u1c3c\0\u1c70\0\u1ca4"+
    "\0\u1cd8\0\u1d0c\0\u0548\0\u1d40\0\u1d74\0\u1da8\0\u1ddc\0\u1e10"+
    "\0\u1e44\0\u1e78\0\u1eac\0\u1ee0\0\u1f14\0\u1f48\0\u1f7c\0\u1fb0"+
    "\0\u1fe4\0\u2018\0\u204c\0\u2080\0\u20b4\0\u20e8\0\u211c\0\u2150"+
    "\0\u2184\0\u21b8\0\u21ec\0\u2220\0\u2254\0\u2288\0\u22bc\0\u22f0"+
    "\0\u2324\0\u2358\0\u238c\0\u23c0\0\u23f4\0\u2428\0\u245c\0\u2490"+
    "\0\u24c4\0\u24f8\0\u252c\0\u2560\0\u2594\0\u25c8\0\u25fc\0\u2630"+
    "\0\u2664\0\u2698\0\u26cc\0\u2700\0\u2734\0\u2768\0\u279c\0\u27d0"+
    "\0\u2804\0\u2838\0\u286c\0\u28a0\0\u28d4\0\u2908\0\u293c\0\u2970"+
    "\0\u29a4\0\u29d8\0\u2a0c\0\u2a40\0\u2a74\0\u2aa8\0\u2adc\0\u2b10"+
    "\0\u2b44\0\u2b78\0\u2bac\0\u2be0\0\u2c14\0\u2c48\0\u2c7c\0\u2cb0"+
    "\0\u2ce4\0\u2d18\0\u2d4c\0\u2d80\0\u2db4\0\u2de8\0\u2e1c\0\u2e50"+
    "\0\u2e84\0\u2eb8\0\u2eec\0\u2f20\0\u2f54\0\u2f88\0\u2fbc\0\u2ff0"+
    "\0\u3024\0\u3058\0\u308c\0\u30c0\0\u30f4\0\u3128\0\u315c\0\u3190"+
    "\0\u31c4\0\u31f8\0\u322c\0\u3260\0\u3294\0\u32c8\0\u32fc\0\u3330"+
    "\0\u3364\0\u3398\0\u33cc\0\u3400\0\u3434\0\u3468\0\u349c\0\u34d0"+
    "\0\u3504\0\u3538\0\u356c\0\u35a0\0\u35d4\0\u3608\0\u363c\0\u3670"+
    "\0\u36a4\0\u36d8\0\u370c\0\u3740\0\u3774\0\u37a8\0\u37dc\0\u3810"+
    "\0\u3844\0\u3878\0\u38ac\0\u38e0\0\u3914\0\u3948\0\u397c\0\u39b0"+
    "\0\u39e4\0\u3a18\0\u3a4c\0\u3a80\0\u3ab4\0\u3ae8\0\u3b1c\0\u3b50"+
    "\0\u3b84\0\u3bb8\0\u3bec\0\u3c20\0\u3c54\0\u3c88\0\u3cbc\0\u3cf0"+
    "\0\u3d24\0\u3d58\0\u3d8c\0\u3dc0\0\u3df4\0\u3e28\0\u3e5c\0\u3e90"+
    "\0\u3ec4\0\u3ef8\0\u3f2c\0\u3f60\0\u3f94\0\u3fc8\0\u3ffc\0\u4030"+
    "\0\u4064\0\u4098\0\u40cc\0\u4100\0\u4134\0\u4168\0\u419c\0\u41d0"+
    "\0\u4204\0\u4238\0\u426c\0\u42a0\0\u42d4\0\u4308\0\u433c\0\u4370"+
    "\0\u43a4\0\u43d8\0\u440c\0\u4440\0\u4474\0\u44a8\0\u44dc\0\u4510"+
    "\0\u4544\0\u4578\0\u0548\0\u45ac\0\u45e0\0\u4614\0\u4648\0\u467c"+
    "\0\u46b0\0\u46e4\0\u4718\0\u474c\0\u4780\0\u47b4\0\u47e8\0\u0548"+
    "\0\u481c\0\u4850\0\u4884\0\u48b8\0\u48ec\0\u4920\0\u4954\0\u4988"+
    "\0\u49bc\0\u49f0\0\u4a24\0\u4a58\0\u4a8c\0\u4ac0\0\u4af4\0\u4b28"+
    "\0\u4b5c\0\u4b90\0\u4bc4\0\u4bf8\0\u4c2c\0\u4c60\0\u4c94\0\u4cc8"+
    "\0\u4cfc\0\u4d30\0\u0548\0\u4d64\0\u4d98\0\u4dcc\0\u4e00\0\u4e34"+
    "\0\u4e68\0\u4e9c\0\u4ed0\0\u4f04\0\u4f38\0\u4f6c\0\u4fa0\0\u4fd4"+
    "\0\u5008\0\u503c\0\u5070\0\u50a4\0\u50d8\0\u510c\0\u5140\0\u5174"+
    "\0\u51a8\0\u51dc\0\u5210\0\u5244\0\u5278\0\u52ac\0\u52e0\0\u5314"+
    "\0\u5348\0\u537c\0\u53b0\0\u53e4\0\u5418\0\u544c\0\u5480\0\u54b4"+
    "\0\u54e8\0\u551c\0\u5550\0\u5584\0\u55b8\0\u55ec\0\u5620\0\u5654"+
    "\0\u5688\0\u56bc\0\u56f0\0\u5724\0\u5758\0\u578c\0\u3670\0\u57c0"+
    "\0\u57f4\0\u5828\0\u585c\0\u5890\0\u58c4\0\u58f8\0\u592c\0\u5960"+
    "\0\u5994\0\u59c8\0\u59fc\0\u5a30\0\u5a64\0\u5a98\0\u5acc\0\u5b00"+
    "\0\u5b34\0\u5b68\0\u5b9c\0\u5bd0\0\u5c04\0\u5c38\0\u5c6c\0\u5ca0"+
    "\0\u5cd4\0\u5d08\0\u5d3c\0\u5d70\0\u5da4\0\u5dd8\0\u5e0c\0\u5e40"+
    "\0\u0548\0\u5e74\0\u5ea8\0\u5edc\0\u5f10\0\u5f44\0\u5f78\0\u5fac"+
    "\0\u5fe0\0\u6014\0\u6048\0\u0548\0\u607c\0\u60b0\0\u60e4\0\u6118"+
    "\0\u0548\0\u614c\0\u6180\0\u61b4\0\u61e8\0\u621c\0\u6250\0\u6284"+
    "\0\u62b8\0\u62ec\0\u6320\0\u6354\0\u6388\0\u63bc\0\u63f0\0\u6424"+
    "\0\u6458\0\u648c\0\u64c0\0\u64f4\0\u6528\0\u655c\0\u6590\0\u65c4"+
    "\0\u65f8\0\u662c\0\u6660\0\u6694\0\u66c8\0\u66fc\0\u6730\0\u6764"+
    "\0\u6798\0\u67cc\0\u6800\0\u6834\0\u6868\0\u689c\0\u68d0\0\u6904"+
    "\0\u6938\0\u696c\0\u69a0\0\u69d4\0\u6a08\0\u0548\0\u6a3c\0\u6a70"+
    "\0\u6aa4\0\u6ad8\0\u6b0c\0\u6b40\0\u6b74\0\u6ba8\0\u6bdc\0\u6c10"+
    "\0\u6c44\0\u6c78\0\u6cac\0\u6ce0\0\u6d14\0\u6d48\0\u6d7c\0\u6db0"+
    "\0\u6de4\0\u6e18\0\u6e4c\0\u6e80\0\u6eb4\0\u6ee8\0\u0548\0\u6f1c"+
    "\0\u6f50\0\u6f84\0\u6fb8\0\u6fec\0\u7020\0\u7054\0\u7088\0\u70bc"+
    "\0\u70f0\0\u7124\0\u7158\0\u718c\0\u71c0\0\u71f4\0\u7228\0\u725c"+
    "\0\u7290\0\u72c4\0\u72f8\0\u732c\0\u7360\0\u7394\0\u1554\0\u73c8"+
    "\0\u73fc\0\u7430\0\u7464\0\u7498\0\u74cc\0\u7500\0\u7534\0\u7568"+
    "\0\u759c\0\u75d0\0\u7604\0\u7638\0\u766c\0\u76a0\0\u76d4\0\u7708"+
    "\0\u773c\0\u7770\0\u77a4\0\u77d8\0\u780c\0\u7840\0\u0548\0\u7874"+
    "\0\u78a8\0\u78dc\0\u7910\0\u7944\0\u7978\0\u79ac\0\u79e0\0\u7a14"+
    "\0\u7a48\0\u7a7c\0\u7ab0\0\u7ae4\0\u7b18\0\u7b4c\0\u7b80\0\u7bb4"+
    "\0\u7be8\0\u7c1c\0\u7c50\0\u7c84\0\u7cb8\0\u7cec\0\u7d20\0\u7d54"+
    "\0\u7d88\0\u7dbc\0\u7df0\0\u7e24\0\u7e58\0\u7e8c\0\u7ec0\0\u7ef4"+
    "\0\u7f28\0\u7f5c\0\u0548\0\u7f90\0\u7fc4\0\u7ff8\0\u802c\0\u8060"+
    "\0\u8094\0\u80c8\0\u0820\0\u80fc\0\u8130\0\u8164\0\u0924\0\u8198"+
    "\0\u81cc\0\u8200\0\u0548\0\u8234\0\u8268\0\u829c\0\u82d0\0\u8304"+
    "\0\u8338\0\u836c\0\u83a0\0\u83d4\0\u8408\0\u843c\0\u8470\0\u84a4"+
    "\0\u84d8\0\u850c\0\u8540\0\u8574\0\u85a8\0\u85dc\0\u8610\0\u8644"+
    "\0\u8678\0\u86ac\0\u86e0\0\u8714\0\u8748\0\u877c\0\u87b0\0\u87e4"+
    "\0\u8818\0\u884c\0\u8880\0\u88b4\0\u88e8\0\u891c\0\u8950\0\u8984"+
    "\0\u89b8\0\u89ec\0\u8a20\0\u8a54\0\u8a88\0\u8abc\0\u8af0\0\u8b24"+
    "\0\u8b58\0\u8b8c\0\u8bc0\0\u8bf4\0\u8c28\0\u8c5c\0\u8c90\0\u8cc4"+
    "\0\u8cf8\0\u8d2c\0\u8d60\0\u8d94\0\u8dc8\0\u8dfc\0\u8e30\0\u8e64"+
    "\0\u8e98\0\u8ecc\0\u8f00\0\u8f34\0\u8f68\0\u8f9c\0\u8fd0\0\u9004"+
    "\0\u9038\0\u906c\0\u90a0\0\u90d4\0\u9108\0\u913c\0\u9170\0\u91a4"+
    "\0\u91d8\0\u920c\0\u9240\0\u9274\0\u92a8\0\u92dc\0\u9310\0\u9344"+
    "\0\u9378\0\u93ac\0\u93e0\0\u9414\0\u9448\0\u947c\0\u94b0\0\u94e4"+
    "\0\u9518\0\u954c\0\u9580\0\u95b4\0\u95e8\0\u961c\0\u9650\0\u9684"+
    "\0\u96b8\0\u96ec\0\u9720\0\u9754\0\u9788\0\u97bc\0\u97f0\0\u9824"+
    "\0\u9858\0\u988c\0\u98c0\0\u98f4\0\u9928\0\u995c\0\u9990\0\u99c4"+
    "\0\u99f8\0\u9a2c\0\u9a60\0\u9a94\0\u9ac8\0\u9afc\0\u9b30\0\u9b64"+
    "\0\u9b98\0\u9bcc\0\u9c00\0\u9c34\0\u9c68\0\u9c9c\0\u9cd0\0\u9d04"+
    "\0\u9d38\0\u9d6c\0\u9da0\0\u9dd4\0\u9e08\0\u9e3c\0\u9e70\0\u9ea4"+
    "\0\u9ed8\0\u9f0c\0\u9f40\0\u0548\0\u9f74\0\u9fa8\0\u9fdc\0\ua010"+
    "\0\ua044\0\ua078\0\ua0ac\0\ua0e0\0\ua114\0\ua148\0\ua17c\0\ua1b0"+
    "\0\ua1e4\0\ua218\0\ua24c\0\ua280\0\ua2b4\0\ua2e8\0\ua31c\0\ua350"+
    "\0\ua384\0\ua3b8\0\ua3ec\0\ua420\0\ua454\0\ua488\0\ua4bc\0\ua4f0"+
    "\0\ua524\0\ua558\0\ua58c\0\ua5c0\0\ua5f4\0\ua628\0\ua65c\0\ua690"+
    "\0\ua6c4\0\ua6f8\0\ua72c\0\ua760\0\u1380\0\ua794\0\ua7c8\0\ua7fc"+
    "\0\ua830\0\ua864\0\ua898\0\ua8cc\0\ua900\0\ua934\0\ua968\0\ua99c"+
    "\0\ua9d0\0\uaa04\0\uaa38\0\uaa6c\0\uaaa0\0\uaad4\0\uab08\0\uab3c"+
    "\0\uab70\0\uaba4\0\uabd8\0\uac0c\0\uac40\0\uac74\0\uaca8\0\uacdc"+
    "\0\uad10\0\uad44\0\uad78\0\u1998\0\uadac\0\uade0\0\uae14\0\uae48"+
    "\0\uae7c\0\uaeb0\0\uaee4\0\uaf18\0\uaf4c\0\uaf80\0\uafb4\0\uafe8"+
    "\0\ub01c\0\ub050\0\ub084\0\ub0b8\0\ub0ec\0\ub120\0\ub154\0\u0548"+
    "\0\ub188\0\ub1bc\0\ub1f0\0\ub224\0\ub258\0\ub28c\0\ub2c0\0\ub2f4"+
    "\0\ub328\0\ub35c\0\ub390\0\ub3c4\0\ub3f8\0\ub42c\0\ub460\0\ub494"+
    "\0\ub4c8\0\ub4fc\0\ub530\0\ub564\0\ub598\0\u0f3c\0\ub5cc\0\ub600"+
    "\0\ub634\0\ub668\0\ub69c\0\ub6d0\0\ub704\0\ub738\0\ub76c\0\ub7a0"+
    "\0\ub7d4\0\ub808\0\ub83c\0\ub870\0\ub8a4\0\ub8d8\0\ub90c\0\ub940"+
    "\0\ub974\0\ub9a8\0\ub9dc\0\uba10\0\uba44\0\uba78\0\ubaac\0\ubae0"+
    "\0\ubb14\0\ubb48\0\ubb7c\0\ubbb0\0\ubbe4\0\ubc18\0\ubc4c\0\ubc80"+
    "\0\ubcb4\0\ubce8\0\ubd1c\0\ubd50\0\ubd84\0\ubdb8\0\ubdec\0\ube20"+
    "\0\ube54\0\ube88\0\ubebc\0\ubef0\0\ubf24\0\ubf58\0\ubf8c\0\ubfc0"+
    "\0\ubff4\0\uc028\0\uc05c\0\uc090\0\uc0c4\0\uc0f8\0\uc12c\0\uc160"+
    "\0\uc194\0\uc1c8\0\uc1fc\0\u0548\0\uc230\0\ub188\0\uc264\0\uc298"+
    "\0\uc2cc\0\uc300\0\uc334\0\uc368\0\uc39c\0\uc3d0\0\uc404\0\uc438"+
    "\0\uc46c\0\uc4a0\0\uc4d4\0\uc508\0\uc53c\0\uc570\0\uc5a4\0\uc5d8"+
    "\0\uc60c\0\uc640\0\uc674\0\ub6d0\0\uc6a8\0\uc6dc\0\uc710\0\uc744"+
    "\0\uc778\0\uc7ac\0\uc7e0\0\uc814\0\uc848\0\uc87c\0\uc8b0\0\uc8e4"+
    "\0\uc918\0\uc94c\0\uc980\0\uc9b4\0\uc9e8\0\uca1c\0\uca50\0\uca84"+
    "\0\ucab8\0\ucaec\0\ucb20\0\ucb54\0\ucb88\0\ucbbc\0\ucbf0\0\ucc24"+
    "\0\ucc58\0\ucc8c\0\uccc0\0\uccf4\0\ucd28\0\ucd5c\0\ucd90\0\ucdc4"+
    "\0\ucdf8\0\uce2c\0\uce60\0\uce94\0\ucec8\0\ucefc\0\ucf30\0\ucf64"+
    "\0\ucf98\0\ucfcc\0\ud000\0\ud034\0\ud068\0\ud09c\0\ud0d0\0\ud104"+
    "\0\ud138\0\ud16c\0\ud1a0\0\ud1d4\0\ud208\0\ud23c\0\ud270\0\ud2a4"+
    "\0\ud2d8\0\uc814\0\ud30c\0\ud340\0\ud374\0\ud3a8\0\ud3dc\0\ud410"+
    "\0\ud444\0\ud478\0\ud4ac\0\ud4e0\0\uca84\0\ud514\0\ud548\0\ud57c"+
    "\0\ud5b0\0\ud5e4\0\ud618\0\ud64c\0\ud680\0\ud6b4\0\ud6e8\0\uccf4"+
    "\0\ud71c\0\ud750\0\ud784\0\ud7b8\0\ud7ec\0\ud820\0\ud854\0\ud888"+
    "\0\ud8bc\0\ud8f0\0\ud924\0\ud958\0\ud98c\0\ud9c0\0\ud9f4\0\uda28"+
    "\0\uda5c\0\uda90\0\udac4\0\udaf8\0\udb2c\0\udb60\0\udb94\0\udbc8"+
    "\0\udbfc\0\udc30\0\udc64\0\udc98\0\udccc\0\udd00\0\udd34\0\udd68"+
    "\0\udd9c\0\uddd0\0\ude04\0\ude38\0\ude6c\0\udea0\0\uded4\0\udf08"+
    "\0\udf3c\0\udf70\0\udfa4\0\udfd8\0\ue00c\0\ue040\0\ue074\0\ue0a8"+
    "\0\ue0dc\0\ue110\0\ue144\0\ue178\0\ue1ac\0\ue1e0\0\ue214\0\ue248"+
    "\0\ue27c\0\ue2b0\0\ue2e4\0\ue318\0\ue34c\0\ue380\0\ue3b4\0\ue3e8"+
    "\0\ue41c\0\ue450\0\ue484\0\ue4b8\0\ue4ec\0\ue520\0\ue554\0\ue588"+
    "\0\ue5bc\0\ue5f0\0\ue624\0\ue658\0\ue68c\0\ue6c0\0\ue6f4\0\ue728"+
    "\0\ue75c\0\ue790\0\ue7c4\0\ue7f8\0\ue82c\0\ue860\0\ue894\0\ue8c8"+
    "\0\ue8fc\0\ue930\0\ue964\0\ue998\0\ue9cc\0\uea00\0\uea34\0\uea68"+
    "\0\uea9c\0\uead0\0\ueb04\0\ueb38\0\ueb6c\0\ueba0\0\uebd4\0\uec08"+
    "\0\uec3c\0\uec70\0\ueca4\0\uecd8\0\ued0c\0\ued40\0\ued74\0\ueda8"+
    "\0\ueddc\0\uee10\0\uee44\0\uee78\0\ueeac\0\ueee0\0\uef14\0\uef48"+
    "\0\uef7c\0\uefb0\0\uefe4\0\uf018\0\uf04c\0\uf080\0\uf0b4\0\uf0e8"+
    "\0\uf11c\0\uf150\0\uf184\0\uf1b8\0\uf1ec\0\uf220\0\uf254\0\uf288"+
    "\0\uf2bc\0\uf2f0\0\uf324\0\uf358\0\uf38c\0\uf3c0\0\uf3f4\0\uf428"+
    "\0\uf45c\0\uf490\0\uf4c4\0\uf4f8\0\uf52c\0\uf560\0\uf594\0\uf5c8"+
    "\0\uf5fc\0\uf630\0\uf664\0\uf698\0\uf6cc\0\uf700\0\uf734\0\uf768"+
    "\0\uf79c\0\uf7d0\0\uf804\0\uf838\0\uf86c\0\uf8a0\0\uf8d4\0\uf908"+
    "\0\uf93c\0\uf970\0\uf9a4\0\uf9d8\0\ufa0c\0\ufa40\0\ufa74\0\ufaa8"+
    "\0\ufadc\0\ufb10\0\ufb44\0\ufb78\0\ufbac\0\ufbe0\0\ufc14\0\ufc48"+
    "\0\ufc7c\0\ufcb0\0\ufce4\0\ufd18\0\ufd4c\0\ufd80\0\ufdb4\0\ufde8"+
    "\0\ufe1c\0\ufe50\0\ufe84\0\ufeb8\0\ufeec\0\uff20\0\uff54\0\uff88"+
    "\0\uffbc\0\ufff0\1\44\1\130\1\214\1\300\1\364\1\u0128"+
    "\1\u015c\1\u0190\1\u01c4\1\u01f8\1\u022c\1\u0260\1\u0294\1\u02c8"+
    "\0\ud9f4\0\udbfc\1\u02fc\1\u0330\1\u0364\0\udd9c\1\u0398\1\u03cc"+
    "\1\u0400\1\u0434\1\u0468\1\u049c";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[1340];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\33\1\34\1\35\1\36\1\37\3\33\1\40\1\41"+
    "\1\33\1\42\1\43\5\33\1\44\1\33\1\45\21\33"+
    "\1\36\1\33\1\46\3\33\1\47\2\33\1\50\3\33"+
    "\1\51\1\33\1\34\1\35\1\36\1\52\1\33\1\53"+
    "\1\33\22\53\2\33\1\53\1\54\1\53\1\55\1\56"+
    "\2\53\2\33\1\53\1\36\1\53\1\33\1\57\3\33"+
    "\1\53\7\33\1\34\1\35\1\36\1\52\1\33\1\60"+
    "\1\33\22\60\2\33\3\60\2\33\2\60\2\33\1\60"+
    "\1\36\1\60\5\33\1\60\7\33\1\34\1\35\1\36"+
    "\1\52\1\33\1\61\1\33\1\62\2\61\1\63\1\64"+
    "\5\61\1\65\7\61\2\33\3\61\2\33\2\61\2\33"+
    "\1\61\1\36\1\61\1\33\1\66\1\33\1\67\1\33"+
    "\1\61\2\33\1\70\4\33\1\34\1\35\1\36\1\52"+
    "\1\33\1\71\1\33\1\72\2\71\1\73\1\74\5\71"+
    "\1\75\7\71\2\33\3\71\2\33\2\71\2\33\1\71"+
    "\1\36\1\71\5\33\1\71\7\33\1\34\1\35\1\36"+
    "\1\52\1\33\1\61\1\33\1\62\2\61\1\63\1\64"+
    "\5\61\1\65\7\61\2\33\3\61\2\33\2\61\2\33"+
    "\1\61\1\36\1\61\2\33\1\76\1\67\1\33\1\61"+
    "\7\33\1\34\1\35\1\36\1\52\3\33\1\77\2\33"+
    "\1\100\1\101\5\33\1\102\23\33\1\36\16\33\1\34"+
    "\1\35\1\36\1\52\32\33\1\103\6\33\1\36\16\33"+
    "\1\34\1\35\1\36\1\52\1\33\1\104\1\33\22\104"+
    "\2\33\3\104\2\33\2\104\2\33\1\104\1\36\1\104"+
    "\5\33\1\104\7\33\1\34\1\35\1\36\1\52\1\33"+
    "\1\61\1\33\22\61\2\33\3\61\2\33\2\61\2\33"+
    "\1\61\1\36\1\61\2\33\1\105\1\67\1\33\1\61"+
    "\7\33\1\34\1\35\1\36\1\52\3\33\1\106\10\33"+
    "\1\107\1\110\1\111\1\33\1\112\3\33\1\113\5\33"+
    "\1\55\6\33\1\36\16\33\1\34\1\35\1\36\1\52"+
    "\1\114\1\115\1\33\22\115\2\33\3\115\2\33\2\115"+
    "\2\33\1\115\1\36\1\115\5\33\1\115\3\33\1\116"+
    "\3\33\1\34\1\35\1\36\1\52\6\33\1\117\1\33"+
    "\1\120\1\121\1\122\1\123\1\124\1\33\1\125\1\33"+
    "\1\126\1\33\1\127\1\33\1\130\4\33\1\131\3\33"+
    "\1\132\3\33\1\36\3\33\1\133\4\33\1\134\2\33"+
    "\1\135\2\33\1\34\1\35\1\36\1\52\3\33\1\136"+
    "\1\137\1\33\1\140\1\141\1\33\1\142\1\143\1\144"+
    "\1\145\1\33\1\146\1\33\1\147\1\33\1\150\1\33"+
    "\1\151\4\33\1\152\3\33\1\153\3\33\1\36\15\33"+
    "\1\154\1\34\1\35\1\155\1\156\32\154\1\55\1\157"+
    "\5\154\1\36\3\154\1\160\5\154\1\70\1\154\1\135"+
    "\1\154\1\33\1\34\1\35\1\36\1\52\3\33\1\161"+
    "\1\162\1\33\1\163\1\164\1\165\1\166\2\33\1\167"+
    "\1\170\3\33\1\171\2\33\1\172\3\33\1\173\1\174"+
    "\1\175\6\33\1\36\1\176\1\177\13\33\1\200\1\34"+
    "\1\35\1\201\1\202\3\200\1\203\1\204\1\200\1\205"+
    "\1\206\1\207\1\210\2\200\1\211\1\212\3\200\1\213"+
    "\2\200\1\214\3\200\1\215\1\216\1\200\1\217\5\200"+
    "\1\36\1\220\14\200\1\33\1\34\1\35\1\36\1\52"+
    "\3\33\1\221\1\222\1\33\1\223\1\224\1\225\1\226"+
    "\2\33\1\227\1\230\3\33\1\231\2\33\1\232\3\33"+
    "\1\233\1\234\7\33\1\36\1\235\1\177\13\33\1\236"+
    "\1\34\1\35\61\236\1\33\1\34\1\35\1\36\1\52"+
    "\1\237\1\240\1\33\22\240\2\33\3\240\2\33\2\240"+
    "\2\33\1\240\1\36\1\240\5\33\1\240\3\33\1\241"+
    "\3\33\1\34\1\35\1\36\1\52\1\33\1\242\1\33"+
    "\22\242\2\33\3\242\2\33\2\242\2\33\1\242\1\36"+
    "\1\242\5\33\1\242\7\33\1\34\1\35\1\36\1\52"+
    "\1\33\1\61\1\33\22\61\2\33\3\61\2\33\2\61"+
    "\2\33\1\61\1\36\1\61\2\33\1\243\1\67\1\33"+
    "\1\61\4\33\1\244\2\33\1\34\1\35\1\36\1\52"+
    "\3\33\1\245\1\246\2\33\1\247\1\33\1\250\2\33"+
    "\1\251\7\33\1\252\5\33\1\253\6\33\1\36\1\254"+
    "\15\33\1\34\1\35\1\36\1\52\1\33\1\255\1\33"+
    "\22\255\2\33\3\255\2\33\2\255\2\33\1\255\1\36"+
    "\1\255\5\33\1\255\7\33\1\34\1\35\1\36\1\52"+
    "\1\33\1\256\1\33\22\256\2\33\3\256\2\33\2\256"+
    "\2\33\1\256\1\36\1\256\3\33\1\67\1\33\1\256"+
    "\7\33\1\34\1\35\1\36\1\52\3\33\1\257\1\260"+
    "\2\33\1\261\1\33\1\262\2\33\1\263\7\33\1\264"+
    "\14\33\1\36\1\265\14\33\65\0\1\34\65\0\1\36"+
    "\42\0\1\36\21\0\1\266\1\267\67\0\1\270\71\0"+
    "\1\271\66\0\1\272\56\0\1\273\66\0\1\274\55\0"+
    "\1\275\55\0\1\266\65\0\31\53\2\0\3\53\1\0"+
    "\1\53\1\0\1\53\5\0\2\53\13\0\11\53\1\276"+
    "\17\53\2\0\3\53\1\0\1\53\1\0\1\53\5\0"+
    "\2\53\13\0\31\60\2\0\3\60\1\0\1\60\1\0"+
    "\1\60\5\0\2\60\13\0\31\61\2\0\3\61\1\0"+
    "\1\61\1\0\1\61\5\0\2\61\13\0\3\61\1\277"+
    "\25\61\2\0\3\61\1\0\1\61\1\0\1\61\5\0"+
    "\2\61\13\0\14\61\1\300\14\61\2\0\3\61\1\0"+
    "\1\61\1\0\1\61\5\0\2\61\13\0\7\61\1\301"+
    "\21\61\2\0\3\61\1\0\1\61\1\0\1\61\5\0"+
    "\2\61\13\0\12\61\1\302\16\61\2\0\3\61\1\0"+
    "\1\61\1\0\1\61\5\0\2\61\13\0\31\71\2\0"+
    "\3\71\1\0\1\71\1\0\1\71\5\0\2\71\13\0"+
    "\3\71\1\303\25\71\2\0\3\71\1\0\1\71\1\0"+
    "\1\71\5\0\2\71\13\0\14\71\1\304\14\71\2\0"+
    "\3\71\1\0\1\71\1\0\1\71\5\0\2\71\13\0"+
    "\7\71\1\305\21\71\2\0\3\71\1\0\1\71\1\0"+
    "\1\71\5\0\2\71\13\0\12\71\1\306\16\71\2\0"+
    "\3\71\1\0\1\71\1\0\1\71\5\0\2\71\16\0"+
    "\1\307\74\0\1\310\56\0\1\311\66\0\1\312\51\0"+
    "\31\104\2\0\3\104\1\0\1\104\1\0\1\104\5\0"+
    "\2\104\31\0\1\313\61\0\1\314\2\0\1\315\67\0"+
    "\1\316\56\0\1\317\50\0\1\320\2\0\1\321\67\0"+
    "\1\322\3\0\1\323\45\0\31\115\2\0\5\115\1\0"+
    "\1\115\3\0\1\115\1\0\2\115\21\0\1\324\60\0"+
    "\1\325\10\0\1\326\60\0\1\327\60\0\1\330\7\0"+
    "\1\331\50\0\1\332\12\0\1\333\53\0\1\334\5\0"+
    "\1\335\12\0\1\336\42\0\1\337\5\0\1\340\1\0"+
    "\1\341\61\0\1\342\54\0\1\343\4\0\1\344\54\0"+
    "\1\345\2\0\1\346\60\0\1\347\76\0\1\350\50\0"+
    "\1\351\10\0\1\352\1\0\1\353\47\0\1\354\75\0"+
    "\1\355\70\0\1\356\55\0\1\357\1\360\1\0\1\361"+
    "\2\0\1\362\60\0\1\363\3\0\1\364\57\0\1\365"+
    "\61\0\1\366\65\0\1\367\50\0\1\370\70\0\1\371"+
    "\71\0\1\372\61\0\1\373\2\0\1\374\60\0\1\375"+
    "\41\0\1\154\2\0\34\154\2\0\5\154\1\0\3\154"+
    "\1\0\5\154\1\0\1\154\1\0\2\154\2\0\1\155"+
    "\33\154\2\0\5\154\1\36\3\154\1\0\5\154\1\0"+
    "\1\154\1\0\2\154\2\0\1\154\1\376\32\154\2\0"+
    "\5\154\1\0\3\154\1\0\5\154\1\0\1\154\1\0"+
    "\1\154\1\377\2\0\35\377\1\0\17\377\1\0\3\377"+
    "\14\0\1\u0100\12\0\1\u0101\47\0\1\u0102\3\0\1\u0103"+
    "\12\0\1\u0104\12\0\1\u0105\40\0\1\u0106\54\0\1\u0107"+
    "\1\0\1\u0108\11\0\1\u0109\56\0\1\u010a\62\0\1\u010b"+
    "\1\u010c\63\0\1\u010d\54\0\1\u010e\77\0\1\u010f\54\0"+
    "\1\u0110\54\0\1\u0111\66\0\1\u0112\73\0\1\u0113\37\0"+
    "\1\200\2\0\43\200\1\0\16\200\2\0\1\201\42\200"+
    "\1\36\16\200\2\0\1\200\1\u0114\41\200\1\0\16\200"+
    "\2\0\11\200\1\u0115\12\200\1\u0116\16\200\1\0\16\200"+
    "\2\0\10\200\1\u0117\3\200\1\u0118\12\200\1\u0119\12\200"+
    "\1\u011a\1\0\16\200\2\0\17\200\1\u011b\23\200\1\0"+
    "\16\200\2\0\10\200\1\u011c\1\200\1\u011d\11\200\1\u011e"+
    "\16\200\1\0\16\200\2\0\17\200\1\u011f\23\200\1\0"+
    "\16\200\2\0\16\200\1\u0120\1\u0121\23\200\1\0\16\200"+
    "\2\0\17\200\1\u0122\23\200\1\0\16\200\2\0\10\200"+
    "\1\u0123\32\200\1\0\16\200\2\0\24\200\1\u0124\16\200"+
    "\1\0\16\200\2\0\15\200\1\u0125\25\200\1\0\16\200"+
    "\2\0\6\200\1\u0126\34\200\1\0\16\200\2\0\11\200"+
    "\1\u0127\31\200\1\0\15\200\1\217\2\0\43\217\1\u0128"+
    "\15\217\1\200\2\0\21\200\1\u0129\21\200\1\0\15\200"+
    "\14\0\1\u012a\12\0\1\u012b\47\0\1\u012c\3\0\1\u012d"+
    "\12\0\1\u012e\12\0\1\u012f\40\0\1\u0130\54\0\1\u0131"+
    "\1\0\1\u0132\11\0\1\u0133\56\0\1\u0134\62\0\1\u0135"+
    "\1\u0136\63\0\1\u0137\54\0\1\u0138\77\0\1\u0139\54\0"+
    "\1\u013a\54\0\1\u013b\66\0\1\u013c\73\0\1\u013d\37\0"+
    "\1\236\2\0\61\236\6\0\31\240\2\0\3\240\1\0"+
    "\1\240\1\0\1\240\3\0\1\240\1\0\2\240\13\0"+
    "\31\242\2\0\3\242\1\0\1\242\1\0\1\242\5\0"+
    "\2\242\21\0\1\u013e\12\0\1\u013f\47\0\1\u0140\31\0"+
    "\1\u0141\33\0\1\u0142\11\0\1\u0143\47\0\1\u0144\72\0"+
    "\1\u0145\61\0\1\u0146\67\0\1\u0147\45\0\31\255\2\0"+
    "\3\255\1\0\1\255\1\0\1\255\5\0\2\255\13\0"+
    "\31\256\2\0\3\256\1\0\1\256\1\0\1\256\5\0"+
    "\2\256\21\0\1\u0148\12\0\1\u0149\47\0\1\u014a\31\0"+
    "\1\u014b\33\0\1\u014c\11\0\1\u014d\47\0\1\u014e\72\0"+
    "\1\u014f\61\0\1\u0150\67\0\1\u0151\37\0\1\266\2\0"+
    "\61\266\5\267\1\u0152\56\267\12\0\1\u0153\75\0\1\u0154"+
    "\65\0\1\u0155\53\0\1\u0156\70\0\1\u0157\57\0\1\u0158"+
    "\52\0\11\53\1\u0159\17\53\2\0\3\53\1\0\1\53"+
    "\1\0\1\53\5\0\2\53\13\0\4\61\1\u015a\24\61"+
    "\2\0\3\61\1\0\1\61\1\0\1\61\5\0\2\61"+
    "\13\0\20\61\1\u015b\10\61\2\0\3\61\1\0\1\61"+
    "\1\0\1\61\5\0\2\61\13\0\10\61\1\u015c\20\61"+
    "\2\0\3\61\1\0\1\61\1\0\1\61\5\0\2\61"+
    "\13\0\15\61\1\u015d\13\61\2\0\3\61\1\0\1\61"+
    "\1\0\1\61\5\0\2\61\13\0\4\71\1\u015e\24\71"+
    "\2\0\3\71\1\0\1\71\1\0\1\71\5\0\2\71"+
    "\13\0\20\71\1\u015f\10\71\2\0\3\71\1\0\1\71"+
    "\1\0\1\71\5\0\2\71\13\0\10\71\1\u0160\20\71"+
    "\2\0\3\71\1\0\1\71\1\0\1\71\5\0\2\71"+
    "\13\0\15\71\1\u0161\13\71\2\0\3\71\1\0\1\71"+
    "\1\0\1\71\5\0\2\71\17\0\1\u0162\77\0\1\u0163"+
    "\53\0\1\u0164\70\0\1\u0165\57\0\1\u0166\57\0\1\u0167"+
    "\64\0\1\u0168\66\0\1\u0169\102\0\1\u016a\43\0\1\u016b"+
    "\75\0\1\u016c\55\0\1\u016d\61\0\1\u016e\53\0\1\u016f"+
    "\66\0\1\u0170\72\0\1\u0171\61\0\1\u0172\110\0\1\u0173"+
    "\30\0\1\u0174\72\0\1\u0175\100\0\1\u0176\44\0\1\u0177"+
    "\71\0\1\u0178\60\0\1\u0179\1\0\1\u017a\56\0\1\u017b"+
    "\73\0\1\u017c\55\0\1\u017d\55\0\1\u017e\73\0\1\u017f"+
    "\51\0\1\u0180\73\0\1\u0181\61\0\1\u0182\71\0\1\u0183"+
    "\52\0\1\u0184\57\0\1\u0185\76\0\1\u0186\53\0\1\u0187"+
    "\64\0\1\u0188\72\0\1\u0189\57\0\1\u018a\64\0\1\u018b"+
    "\63\0\1\u018c\74\0\1\u018d\47\0\1\u018e\56\0\1\u018f"+
    "\104\0\1\u0185\45\0\1\u0190\2\0\1\u0191\55\0\1\u0192"+
    "\16\0\1\u0193\65\0\1\u0194\45\0\1\u0195\74\0\1\u0196"+
    "\57\0\1\u0197\70\0\1\u0198\52\0\1\u0199\67\0\1\u019a"+
    "\43\0\1\376\2\0\34\376\2\266\5\376\1\266\3\376"+
    "\1\266\5\376\1\266\1\376\1\266\1\376\1\377\2\0"+
    "\35\377\1\u019b\17\377\1\0\3\377\13\0\1\u019c\75\0"+
    "\1\u019d\47\0\1\u019e\5\0\1\u019f\3\0\1\u01a0\64\0"+
    "\1\u01a1\72\0\1\u01a2\43\0\1\u01a3\76\0\1\u01a4\7\0"+
    "\1\u01a5\41\0\1\u01a6\71\0\1\u01a7\60\0\1\u01a8\66\0"+
    "\1\u01a9\63\0\1\u01aa\61\0\1\u01ab\53\0\1\u01ac\20\0"+
    "\1\u01ad\53\0\1\u01ae\66\0\1\u01af\50\0\1\u01b0\10\0"+
    "\1\u01b1\64\0\1\u01b2\1\u01b3\60\0\1\u01b4\62\0\1\u01b5"+
    "\43\0\1\u0114\2\0\43\u0114\1\266\15\u0114\1\200\2\0"+
    "\10\200\1\u01b6\32\200\1\0\16\200\2\0\22\200\1\u01b7"+
    "\20\200\1\0\16\200\2\0\6\200\1\u01b8\5\200\1\u01b9"+
    "\3\200\1\u01ba\22\200\1\0\16\200\2\0\21\200\1\u01bb"+
    "\21\200\1\0\16\200\2\0\30\200\1\u01bc\12\200\1\0"+
    "\16\200\2\0\10\200\1\u01bd\32\200\1\0\16\200\2\0"+
    "\23\200\1\u01be\7\200\1\u01bf\7\200\1\0\16\200\2\0"+
    "\11\200\1\u01c0\31\200\1\0\16\200\2\0\17\200\1\u01c1"+
    "\23\200\1\0\16\200\2\0\14\200\1\u01c2\26\200\1\0"+
    "\16\200\2\0\17\200\1\u01c3\23\200\1\0\16\200\2\0"+
    "\17\200\1\u01c4\23\200\1\0\16\200\2\0\15\200\1\u01c5"+
    "\25\200\1\0\16\200\2\0\5\200\1\u01c6\20\200\1\u01c7"+
    "\14\200\1\0\16\200\2\0\16\200\1\u01c8\24\200\1\0"+
    "\16\200\2\0\21\200\1\u01c9\21\200\1\0\16\200\2\0"+
    "\6\200\1\u01ca\10\200\1\u01cb\23\200\1\0\16\200\2\0"+
    "\20\200\1\u01cc\1\u01cd\21\200\1\0\16\200\2\0\16\200"+
    "\1\u01ce\24\200\1\0\15\200\1\u0128\2\0\35\u0128\1\u01cf"+
    "\23\u0128\1\200\2\0\15\200\1\u01d0\25\200\1\0\15\200"+
    "\13\0\1\u01d1\75\0\1\u01d2\47\0\1\u01d3\5\0\1\u01d4"+
    "\3\0\1\u01d5\64\0\1\u01d6\72\0\1\u01d7\43\0\1\u01d8"+
    "\76\0\1\u01d9\7\0\1\u01da\41\0\1\u01db\71\0\1\u01dc"+
    "\60\0\1\u01dd\66\0\1\u01de\63\0\1\u01df\61\0\1\u01e0"+
    "\53\0\1\u01e1\20\0\1\u01e2\53\0\1\u01e3\66\0\1\u01e4"+
    "\50\0\1\u01e5\10\0\1\u01e6\64\0\1\u01e7\1\u01e8\60\0"+
    "\1\u01e9\62\0\1\u01ea\56\0\1\u01eb\75\0\1\u01ec\47\0"+
    "\1\u01ed\65\0\1\u01ee\72\0\1\u01ef\60\0\1\u01f0\62\0"+
    "\1\u01f1\55\0\1\u01f2\20\0\1\u01f3\54\0\1\u01f4\61\0"+
    "\1\u01f5\56\0\1\u01f6\75\0\1\u01f7\47\0\1\u01f8\65\0"+
    "\1\u01f9\72\0\1\u01fa\60\0\1\u01fb\62\0\1\u01fc\55\0"+
    "\1\u01fd\20\0\1\u01fe\54\0\1\u01ff\61\0\1\u0200\43\0"+
    "\4\267\1\u0201\1\u0152\56\267\11\0\1\u0202\62\0\1\u0203"+
    "\102\0\1\u0204\53\0\1\u0205\70\0\1\u0206\63\0\1\u0207"+
    "\45\0\23\53\1\u0208\5\53\2\0\3\53\1\0\1\53"+
    "\1\0\1\53\5\0\2\53\13\0\3\61\1\u0209\25\61"+
    "\2\0\3\61\1\0\1\61\1\0\1\61\5\0\2\61"+
    "\13\0\21\61\1\u020a\7\61\2\0\3\61\1\0\1\61"+
    "\1\0\1\61\5\0\2\61\13\0\11\61\1\u020b\17\61"+
    "\2\0\3\61\1\0\1\61\1\0\1\61\5\0\2\61"+
    "\13\0\16\61\1\u020c\12\61\2\0\3\61\1\0\1\61"+
    "\1\0\1\61\5\0\2\61\13\0\3\71\1\u020d\25\71"+
    "\2\0\3\71\1\0\1\71\1\0\1\71\5\0\2\71"+
    "\13\0\21\71\1\u020e\7\71\2\0\3\71\1\0\1\71"+
    "\1\0\1\71\5\0\2\71\13\0\11\71\1\u020f\17\71"+
    "\2\0\3\71\1\0\1\71\1\0\1\71\5\0\2\71"+
    "\13\0\16\71\1\u0210\12\71\2\0\3\71\1\0\1\71"+
    "\1\0\1\71\5\0\2\71\16\0\1\u0211\101\0\1\u0212"+
    "\53\0\1\u0213\70\0\1\u0214\53\0\1\u0215\66\0\1\u0216"+
    "\62\0\1\u0217\56\0\1\u0218\66\0\1\u0219\66\0\1\u021a"+
    "\66\0\1\u021b\72\0\1\u021c\42\0\1\u021d\77\0\1\u0180"+
    "\53\0\1\u021e\74\0\1\u021f\47\0\1\342\71\0\1\u0220"+
    "\101\0\1\u0221\52\0\1\u0222\63\0\1\u0223\61\0\1\u0224"+
    "\52\0\1\u0225\73\0\1\u0226\66\0\1\u0227\54\0\1\u0228"+
    "\57\0\1\u0229\117\0\1\u0180\42\0\1\u022a\100\0\1\u022b"+
    "\57\0\1\u0180\52\0\1\u022c\100\0\1\u022d\46\0\1\u022e"+
    "\66\0\1\u022f\63\0\1\u0230\101\0\1\u0185\42\0\1\u0231"+
    "\61\0\1\u0232\52\0\1\u0233\71\0\1\u0234\60\0\1\u0235"+
    "\62\0\1\u0236\101\0\1\u0237\55\0\1\u0238\62\0\1\u0239"+
    "\72\0\1\u023a\45\0\1\u023b\74\0\1\u023c\100\0\1\u023d"+
    "\42\0\1\u0230\53\0\1\u023e\76\0\1\u023f\105\0\1\u022e"+
    "\57\0\1\u0240\45\0\1\u0241\57\0\1\u0242\63\0\1\u0243"+
    "\70\0\1\u0244\63\0\1\u0245\47\0\1\u0246\66\0\1\u0247"+
    "\72\0\1\u0248\70\0\1\u0249\63\0\1\u024a\61\0\1\u024b"+
    "\56\0\1\u024c\65\0\1\u024d\57\0\1\u024e\65\0\1\u024f"+
    "\62\0\1\u0250\75\0\1\u0251\62\0\1\u0247\55\0\1\u0252"+
    "\61\0\1\u0253\53\0\1\u0254\72\0\1\u0255\67\0\1\u0256"+
    "\60\0\1\u0257\67\0\1\u01ab\55\0\1\u0258\45\0\1\200"+
    "\2\0\20\200\1\u0259\22\200\1\0\16\200\2\0\14\200"+
    "\1\u025a\26\200\1\0\16\200\2\0\14\200\1\u025b\26\200"+
    "\1\0\16\200\2\0\21\200\1\u025c\21\200\1\0\16\200"+
    "\2\0\21\200\1\u025d\21\200\1\0\16\200\2\0\5\200"+
    "\1\u025e\35\200\1\0\16\200\2\0\10\200\1\u025f\32\200"+
    "\1\0\16\200\2\0\17\200\1\u0260\23\200\1\0\16\200"+
    "\2\0\24\200\1\u0261\16\200\1\0\16\200\2\0\24\200"+
    "\1\u0262\16\200\1\0\16\200\2\0\22\200\1\u0263\20\200"+
    "\1\0\16\200\2\0\15\200\1\u0264\25\200\1\0\16\200"+
    "\2\0\17\200\1\u0265\23\200\1\0\16\200\2\0\13\200"+
    "\1\u0266\27\200\1\0\16\200\2\0\15\200\1\u0267\25\200"+
    "\1\0\16\200\2\0\14\200\1\u0268\26\200\1\0\16\200"+
    "\2\0\26\200\1\u0269\14\200\1\0\16\200\2\0\25\200"+
    "\1\u025f\15\200\1\0\16\200\2\0\17\200\1\u026a\23\200"+
    "\1\0\16\200\2\0\15\200\1\u026b\25\200\1\0\16\200"+
    "\2\0\5\200\1\u026c\35\200\1\0\16\200\2\0\14\200"+
    "\1\u026d\26\200\1\0\16\200\2\0\20\200\1\u026e\22\200"+
    "\1\0\16\200\2\0\15\200\1\u026f\25\200\1\0\16\200"+
    "\2\0\21\200\1\u01c5\21\200\1\0\16\200\2\0\13\200"+
    "\1\u0270\27\200\1\0\15\200\23\0\1\u0271\57\0\1\u0272"+
    "\63\0\1\u0273\70\0\1\u0274\63\0\1\u0275\47\0\1\u0276"+
    "\66\0\1\u0277\72\0\1\u0278\70\0\1\u0279\63\0\1\u027a"+
    "\61\0\1\u027b\56\0\1\u027c\65\0\1\u027d\57\0\1\u027e"+
    "\65\0\1\u027f\62\0\1\u0280\75\0\1\u0281\62\0\1\u0277"+
    "\55\0\1\u0282\61\0\1\u0283\53\0\1\u0284\72\0\1\u0285"+
    "\67\0\1\u0286\60\0\1\u0287\67\0\1\u01e0\55\0\1\u0288"+
    "\70\0\1\u0289\57\0\1\u028a\63\0\1\u028b\66\0\1\u028c"+
    "\61\0\1\u028d\65\0\1\u028e\72\0\1\u028f\62\0\1\u01f1"+
    "\52\0\1\u0290\62\0\1\u0291\70\0\1\u0292\57\0\1\u0293"+
    "\63\0\1\u0294\66\0\1\u0295\61\0\1\u0296\65\0\1\u0297"+
    "\72\0\1\u0298\62\0\1\u01fc\52\0\1\u0299\62\0\1\u029a"+
    "\60\0\1\u029b\67\0\1\u029c\70\0\1\u029d\57\0\1\u029e"+
    "\63\0\1\u029f\56\0\1\u02a0\56\0\10\53\1\u02a1\20\53"+
    "\2\0\3\53\1\0\1\53\1\0\1\53\3\0\1\u02a2"+
    "\1\0\2\53\13\0\5\61\1\u02a3\23\61\2\0\3\61"+
    "\1\0\1\61\1\0\1\61\5\0\2\61\13\0\16\61"+
    "\1\u02a4\12\61\2\0\3\61\1\0\1\61\1\0\1\61"+
    "\5\0\2\61\13\0\12\61\1\u02a5\16\61\2\0\3\61"+
    "\1\0\1\61\1\0\1\61\5\0\2\61\13\0\12\61"+
    "\1\u02a6\16\61\2\0\3\61\1\0\1\61\1\0\1\61"+
    "\5\0\2\61\13\0\5\71\1\u02a7\23\71\2\0\3\71"+
    "\1\0\1\71\1\0\1\71\5\0\2\71\13\0\16\71"+
    "\1\u02a8\12\71\2\0\3\71\1\0\1\71\1\0\1\71"+
    "\5\0\2\71\13\0\12\71\1\u02a9\16\71\2\0\3\71"+
    "\1\0\1\71\1\0\1\71\5\0\2\71\13\0\12\71"+
    "\1\u02aa\16\71\2\0\3\71\1\0\1\71\1\0\1\71"+
    "\5\0\2\71\20\0\1\u02ab\74\0\1\u02ac\57\0\1\u02ad"+
    "\63\0\1\u02ae\66\0\1\u02af\60\0\1\u02b0\3\0\1\u02b1"+
    "\55\0\1\u02b2\67\0\1\u02b3\70\0\1\u02b4\56\0\1\u02b5"+
    "\70\0\1\u02b6\60\0\1\u02b7\50\0\1\u02b8\72\0\1\u02b9"+
    "\67\0\1\u02ba\53\0\1\u02bb\66\0\1\u02bc\64\0\1\u02bd"+
    "\110\0\1\u02be\36\0\1\u0173\64\0\1\u02bf\103\0\1\u02c0"+
    "\41\0\1\u02c1\11\0\1\u02c2\57\0\1\u016f\46\0\1\u02c3"+
    "\111\0\1\u02c4\51\0\1\u0224\66\0\1\u02c5\54\0\1\u02c6"+
    "\70\0\1\u02c7\54\0\1\u022e\63\0\1\u022e\1\u02c8\62\0"+
    "\1\u02c9\2\0\1\u02ca\73\0\1\u02cb\46\0\1\u02cc\67\0"+
    "\1\u02cd\65\0\1\u02ce\66\0\1\u02cf\62\0\1\u02d0\66\0"+
    "\1\u02d1\56\0\1\u02d2\60\0\1\u02d3\57\0\1\u02d4\74\0"+
    "\1\u02d5\50\0\1\u02d6\76\0\1\u02d7\75\0\1\u02d8\41\0"+
    "\1\u02d9\60\0\1\u02da\63\0\1\u02db\72\0\1\u02dc\55\0"+
    "\1\u02dd\70\0\1\u02de\64\0\1\u02df\67\0\1\u02e0\64\0"+
    "\1\u02e1\66\0\1\u02e2\52\0\1\u0247\65\0\1\u02e3\61\0"+
    "\1\u02e4\70\0\1\u02e5\53\0\1\u02e6\76\0\1\u02e7\47\0"+
    "\1\u02e8\100\0\1\u02e9\47\0\1\u02ea\73\0\1\u02eb\63\0"+
    "\1\u01a2\53\0\1\u02ec\60\0\1\u02ed\52\0\1\200\2\0"+
    "\11\200\1\u02ee\31\200\1\0\16\200\2\0\6\200\1\u02ef"+
    "\34\200\1\0\16\200\2\0\6\200\1\u02f0\34\200\1\0"+
    "\16\200\2\0\15\200\1\u02f1\25\200\1\0\16\200\2\0"+
    "\7\200\1\u02f2\33\200\1\0\16\200\2\0\14\200\1\u02f3"+
    "\26\200\1\0\16\200\2\0\15\200\1\u02f4\25\200\1\0"+
    "\16\200\2\0\21\200\1\u02f5\21\200\1\0\16\200\2\0"+
    "\22\200\1\u02f6\20\200\1\0\16\200\2\0\25\200\1\u02f7"+
    "\15\200\1\0\16\200\2\0\14\200\1\u025f\26\200\1\0"+
    "\16\200\2\0\16\200\1\u02f8\24\200\1\0\16\200\2\0"+
    "\14\200\1\u02f9\26\200\1\0\16\200\2\0\21\200\1\u02fa"+
    "\21\200\1\0\16\200\2\0\11\200\1\u02fb\31\200\1\0"+
    "\16\200\2\0\24\200\1\u02fc\16\200\1\0\16\200\2\0"+
    "\10\200\1\u02fd\32\200\1\0\16\200\2\0\25\200\1\u02fe"+
    "\15\200\1\0\16\200\2\0\11\200\1\u02ff\31\200\1\0"+
    "\16\200\2\0\21\200\1\u0300\21\200\1\0\16\200\2\0"+
    "\21\200\1\u01bc\21\200\1\0\16\200\2\0\11\200\1\u0301"+
    "\31\200\1\0\16\200\2\0\6\200\1\u0302\34\200\1\0"+
    "\15\200\14\0\1\u0303\60\0\1\u0304\63\0\1\u0305\72\0"+
    "\1\u0306\55\0\1\u0307\70\0\1\u0308\64\0\1\u0309\67\0"+
    "\1\u030a\64\0\1\u030b\66\0\1\u030c\52\0\1\u0277\65\0"+
    "\1\u030d\61\0\1\u030e\70\0\1\u030f\53\0\1\u0310\76\0"+
    "\1\u0311\47\0\1\u0312\100\0\1\u0313\47\0\1\u0314\73\0"+
    "\1\u0315\63\0\1\u01d7\53\0\1\u0316\60\0\1\u0317\66\0"+
    "\1\u0318\60\0\1\u0319\63\0\1\u031a\72\0\1\u031b\62\0"+
    "\1\u01f1\65\0\1\u031c\71\0\1\u031d\60\0\1\u031e\50\0"+
    "\1\u031f\66\0\1\u0320\60\0\1\u0321\63\0\1\u0322\72\0"+
    "\1\u0323\62\0\1\u01fc\65\0\1\u0324\71\0\1\u0325\60\0"+
    "\1\u0326\50\0\1\u0327\102\0\1\u0328\53\0\1\u0329\57\0"+
    "\1\u032a\63\0\1\u032b\72\0\1\u032c\46\0\31\53\2\0"+
    "\3\53\1\0\1\53\1\0\1\53\3\0\1\u02a2\1\0"+
    "\2\53\11\0\1\u032d\65\0\12\61\1\u032e\16\61\2\0"+
    "\3\61\1\0\1\61\1\0\1\61\5\0\2\61\13\0"+
    "\6\61\1\u032f\22\61\2\0\3\61\1\0\1\61\1\0"+
    "\1\61\5\0\2\61\13\0\6\61\1\u0330\22\61\2\0"+
    "\3\61\1\0\1\61\1\0\1\61\5\0\2\61\13\0"+
    "\12\71\1\u0331\16\71\2\0\3\71\1\0\1\71\1\0"+
    "\1\71\5\0\2\71\13\0\6\71\1\u0332\22\71\2\0"+
    "\3\71\1\0\1\71\1\0\1\71\5\0\2\71\13\0"+
    "\6\71\1\u0333\22\71\2\0\3\71\1\0\1\71\1\0"+
    "\1\71\5\0\2\71\25\0\1\u0334\57\0\1\u0335\63\0"+
    "\1\u0336\63\0\1\u0337\60\0\1\u0338\65\0\1\u02b6\61\0"+
    "\1\u0339\65\0\1\u033a\75\0\1\u02b6\56\0\1\u033b\62\0"+
    "\1\u033c\64\0\1\u033d\61\0\1\u033e\75\0\1\u0180\47\0"+
    "\1\u033f\67\0\1\u0340\67\0\1\u0341\63\0\1\u0342\61\0"+
    "\1\u0343\65\0\1\u0344\54\0\1\u0345\57\0\1\u0346\63\0"+
    "\1\345\66\0\1\u0347\60\0\1\u0348\103\0\1\u0349\56\0"+
    "\1\333\63\0\1\u034a\67\0\1\u034b\57\0\1\u034c\61\0"+
    "\1\u034d\60\0\1\u022e\61\0\1\u034e\62\0\1\u034f\72\0"+
    "\1\u0350\54\0\1\u0351\67\0\1\u0352\63\0\1\u0353\56\0"+
    "\1\u0354\70\0\1\u0355\66\0\1\u0356\60\0\1\u0357\61\0"+
    "\1\u0358\65\0\1\u022e\70\0\1\u0359\55\0\1\u035a\75\0"+
    "\1\u035b\46\0\1\u035c\62\0\1\u035d\74\0\1\u035e\67\0"+
    "\1\u035f\57\0\1\u0247\57\0\1\u0360\70\0\1\u0361\72\0"+
    "\1\u0362\47\0\1\u0363\102\0\1\u0364\41\0\1\u0365\63\0"+
    "\1\u035b\65\0\1\u02df\102\0\1\u0366\47\0\1\u0367\61\0"+
    "\1\u01ad\64\0\1\u0368\62\0\1\u0369\65\0\1\u01a2\41\0"+
    "\1\200\2\0\14\200\1\u036a\26\200\1\0\16\200\2\0"+
    "\26\200\1\u036b\14\200\1\0\16\200\2\0\11\200\1\u036c"+
    "\31\200\1\0\16\200\2\0\10\200\1\u036d\32\200\1\0"+
    "\16\200\2\0\21\200\1\u036e\21\200\1\0\16\200\2\0"+
    "\25\200\1\u036f\15\200\1\0\16\200\2\0\21\200\1\u025f"+
    "\21\200\1\0\16\200\2\0\15\200\1\u0370\25\200\1\0"+
    "\16\200\2\0\22\200\1\u0371\20\200\1\0\16\200\2\0"+
    "\31\200\1\u0372\11\200\1\0\16\200\2\0\15\200\1\u0373"+
    "\25\200\1\0\16\200\2\0\34\200\1\u0374\6\200\1\0"+
    "\16\200\2\0\12\200\1\207\30\200\1\0\16\200\2\0"+
    "\12\200\1\u036b\30\200\1\0\16\200\2\0\14\200\1\u02f4"+
    "\26\200\1\0\16\200\2\0\33\200\1\u0375\7\200\1\0"+
    "\16\200\2\0\17\200\1\u0376\23\200\1\0\16\200\2\0"+
    "\15\200\1\u01c7\25\200\1\0\16\200\2\0\16\200\1\u0377"+
    "\24\200\1\0\16\200\2\0\15\200\1\u0378\25\200\1\0"+
    "\16\200\2\0\17\200\1\u01bc\23\200\1\0\15\200\17\0"+
    "\1\u0379\75\0\1\u037a\46\0\1\u037b\62\0\1\u037c\74\0"+
    "\1\u037d\67\0\1\u037e\57\0\1\u0277\57\0\1\u037f\70\0"+
    "\1\u0380\72\0\1\u0381\47\0\1\u0382\102\0\1\u0383\41\0"+
    "\1\u0384\63\0\1\u037a\65\0\1\u0309\102\0\1\u0385\47\0"+
    "\1\u0386\61\0\1\u01e2\64\0\1\u0387\62\0\1\u0388\65\0"+
    "\1\u01d7\60\0\1\u0389\75\0\1\u038a\46\0\1\u038b\73\0"+
    "\1\u01f1\57\0\1\u038c\62\0\1\u031b\65\0\1\u038d\64\0"+
    "\1\u038e\60\0\1\u038f\75\0\1\u0390\46\0\1\u0391\73\0"+
    "\1\u01fc\57\0\1\u0392\62\0\1\u0323\65\0\1\u0393\64\0"+
    "\1\u0394\72\0\1\u0395\62\0\1\u029b\54\0\1\u0396\57\0"+
    "\1\u0397\64\0\1\u0398\51\0\1\u0399\65\0\22\61\1\u02a3"+
    "\6\61\2\0\3\61\1\0\1\61\1\0\1\61\5\0"+
    "\2\61\13\0\13\61\1\u039a\15\61\2\0\3\61\1\0"+
    "\1\61\1\0\1\61\5\0\2\61\13\0\7\61\1\u039b"+
    "\21\61\2\0\3\61\1\0\1\61\1\0\1\61\5\0"+
    "\2\61\13\0\22\71\1\u02a7\6\71\2\0\3\71\1\0"+
    "\1\71\1\0\1\71\5\0\2\71\13\0\13\71\1\u039c"+
    "\15\71\2\0\3\71\1\0\1\71\1\0\1\71\5\0"+
    "\2\71\13\0\7\71\1\u039d\21\71\2\0\3\71\1\0"+
    "\1\71\1\0\1\71\5\0\2\71\35\0\1\u02ab\54\0"+
    "\1\u039e\57\0\1\u039f\65\0\1\u03a0\61\0\1\u03a1\104\0"+
    "\1\u03a2\43\0\1\u033c\70\0\1\u03a3\57\0\1\u03a4\62\0"+
    "\1\u0169\60\0\1\u0180\74\0\1\u03a5\51\0\1\u03a6\64\0"+
    "\1\u03a7\70\0\1\u03a8\70\0\1\u03a9\60\0\1\u03aa\51\0"+
    "\1\u03ab\100\0\1\u0180\51\0\1\u03ac\75\0\1\u03ad\47\0"+
    "\1\u03ae\103\0\1\u03af\57\0\1\u03b0\46\0\1\u03b1\100\0"+
    "\1\u03b2\55\0\1\u03b3\70\0\1\u03b4\56\0\1\u03b5\54\0"+
    "\1\u03b6\74\0\1\u03b7\66\0\1\u03b8\67\0\1\u022e\57\0"+
    "\1\u03b9\70\0\1\u03ba\50\0\1\u03bb\67\0\1\u03bc\63\0"+
    "\1\u02ea\66\0\1\u02df\63\0\1\u03bd\52\0\1\u03be\72\0"+
    "\1\u03bf\71\0\1\u03c0\62\0\1\u03c1\52\0\1\u03c2\70\0"+
    "\1\u03c3\63\0\1\u03c4\71\0\2\u03c5\7\0\1\u03c5\12\0"+
    "\1\u03c5\32\0\1\u03c6\67\0\1\u03c7\51\0\1\u03c8\65\0"+
    "\1\u03c9\42\0\1\200\2\0\17\200\1\u02ff\23\200\1\0"+
    "\16\200\2\0\22\200\1\u02f4\20\200\1\0\16\200\2\0"+
    "\22\200\1\u03ca\20\200\1\0\16\200\2\0\11\200\1\u03cb"+
    "\31\200\1\0\16\200\2\0\20\200\1\u03cc\22\200\1\0"+
    "\16\200\2\0\26\200\1\u03cd\14\200\1\0\16\200\2\0"+
    "\25\200\1\u03ce\15\200\1\0\16\200\2\0\14\200\1\u03cf"+
    "\26\200\1\0\16\200\2\0\21\200\1\u03d0\21\200\1\0"+
    "\16\200\2\0\21\200\1\u03d1\21\200\1\0\16\200\2\0"+
    "\27\200\2\u03d2\7\200\1\u03d2\2\200\1\0\7\200\1\u03d2"+
    "\6\200\2\0\22\200\1\u03d3\20\200\1\0\16\200\2\0"+
    "\26\200\1\u03d4\14\200\1\0\16\200\2\0\14\200\1\u03d5"+
    "\26\200\1\0\16\200\2\0\16\200\1\u03d6\24\200\1\0"+
    "\15\200\22\0\1\u0314\66\0\1\u0309\63\0\1\u03d7\52\0"+
    "\1\u03d8\72\0\1\u03d9\71\0\1\u03da\62\0\1\u03db\52\0"+
    "\1\u03dc\70\0\1\u03dd\63\0\1\u03de\71\0\2\u03df\7\0"+
    "\1\u03df\12\0\1\u03df\32\0\1\u03e0\67\0\1\u03e1\51\0"+
    "\1\u03e2\65\0\1\u03e3\64\0\1\u03e4\66\0\1\u031b\63\0"+
    "\1\u03e5\62\0\1\u03e6\56\0\1\u03e7\57\0\1\u01f1\72\0"+
    "\1\u03e8\66\0\1\u0323\63\0\1\u03e9\62\0\1\u03ea\56\0"+
    "\1\u03eb\57\0\1\u01fc\74\0\1\u03ec\56\0\1\u029b\71\0"+
    "\1\u03ed\42\0\1\u03ee\3\0\27\u03ee\2\0\2\u03ee\1\0"+
    "\2\u03ee\1\0\1\u03ee\4\0\3\u03ee\13\0\11\61\1\u02a3"+
    "\17\61\2\0\3\61\1\0\1\61\1\0\1\61\5\0"+
    "\2\61\13\0\17\61\1\u03ef\11\61\2\0\3\61\1\0"+
    "\1\61\1\0\1\61\5\0\2\61\13\0\11\71\1\u02a7"+
    "\17\71\2\0\3\71\1\0\1\71\1\0\1\71\5\0"+
    "\2\71\13\0\17\71\1\u03f0\11\71\2\0\3\71\1\0"+
    "\1\71\1\0\1\71\5\0\2\71\24\0\1\u02ab\71\0"+
    "\1\u03f1\52\0\1\u033c\76\0\1\u03f2\45\0\1\u03f3\76\0"+
    "\1\u03f4\50\0\1\u03f5\66\0\1\u0173\66\0\1\u0173\65\0"+
    "\1\u016f\72\0\1\u0173\44\0\1\u03f6\64\0\1\u0173\75\0"+
    "\1\u03f7\63\0\1\u03f8\61\0\1\u03f9\65\0\1\u0230\63\0"+
    "\1\u03fa\70\0\1\u03fb\56\0\1\u03fc\61\0\1\u02d7\60\0"+
    "\1\u02c8\70\0\1\u03fd\61\0\1\u03fe\65\0\1\u03ff\52\0"+
    "\1\u0400\63\0\1\u0401\70\0\1\u0402\54\0\1\u0403\114\0"+
    "\1\u0404\32\0\1\u0405\71\0\1\u0406\103\0\1\u0407\50\0"+
    "\1\u0408\61\0\1\u0409\65\0\1\u040a\57\0\1\u040b\57\0"+
    "\1\u0368\113\0\1\u040c\30\0\1\u040d\70\0\1\u040e\71\0"+
    "\1\u040f\74\0\1\u0410\26\0\1\200\2\0\6\200\1\u0411"+
    "\34\200\1\0\16\200\2\0\14\200\1\u0412\26\200\1\0"+
    "\16\200\2\0\34\200\1\u0413\6\200\1\0\16\200\2\0"+
    "\21\200\1\u0414\21\200\1\0\16\200\2\0\17\200\1\u0415"+
    "\23\200\1\0\16\200\2\0\21\200\1\u0416\21\200\1\0"+
    "\16\200\2\0\15\200\1\u0417\25\200\1\0\16\200\2\0"+
    "\11\200\1\u0377\31\200\1\0\16\200\2\0\41\200\1\u0418"+
    "\1\200\1\0\16\200\2\0\6\200\1\u0419\34\200\1\0"+
    "\16\200\2\0\13\200\1\u041a\27\200\1\0\16\200\2\0"+
    "\21\200\1\u041b\21\200\1\0\16\200\2\0\32\200\1\u041c"+
    "\10\200\1\0\15\200\11\0\1\u041d\71\0\1\u041e\103\0"+
    "\1\u041f\50\0\1\u0420\61\0\1\u0421\65\0\1\u0422\57\0"+
    "\1\u0423\57\0\1\u0387\113\0\1\u0424\30\0\1\u0425\70\0"+
    "\1\u0426\71\0\1\u0427\74\0\1\u0428\46\0\1\u01f3\54\0"+
    "\1\u0429\66\0\1\u038d\73\0\1\u042a\57\0\1\u01fe\54\0"+
    "\1\u042b\66\0\1\u0393\73\0\1\u042c\63\0\1\u029b\45\0"+
    "\16\61\1\u02a3\12\61\2\0\3\61\1\0\1\61\1\0"+
    "\1\61\5\0\2\61\13\0\16\71\1\u02a7\12\71\2\0"+
    "\3\71\1\0\1\71\1\0\1\71\5\0\2\71\31\0"+
    "\1\u02ab\56\0\1\u042d\65\0\1\u042e\62\0\1\u042f\67\0"+
    "\1\u0430\55\0\1\u03a6\76\0\1\u02c2\55\0\1\u0180\54\0"+
    "\1\u0431\70\0\1\u0432\67\0\1\u0433\74\0\1\u0434\43\0"+
    "\1\u0435\70\0\1\u03af\55\0\1\u0436\65\0\1\u03b4\63\0"+
    "\1\u0437\66\0\1\u0438\63\0\1\u0439\75\0\1\u02df\40\0"+
    "\1\u043a\65\0\1\u043b\3\0\1\u043c\7\0\1\u043d\10\0"+
    "\1\u043e\71\0\1\u043f\35\0\1\u0440\55\0\1\u024c\110\0"+
    "\1\u0441\56\0\2\u0442\7\0\1\u0442\12\0\1\u0442\26\0"+
    "\1\u0443\110\0\1\u0444\40\0\1\u0247\51\0\1\u0445\52\0"+
    "\1\200\2\0\31\200\1\u02f4\11\200\1\0\16\200\2\0"+
    "\6\200\1\u0446\34\200\1\0\16\200\2\0\10\200\1\u0447"+
    "\3\200\1\u0448\7\200\1\u0449\10\200\1\u044a\5\200\1\0"+
    "\16\200\2\0\43\200\1\u043f\16\200\2\0\15\200\1\u044b"+
    "\25\200\1\0\16\200\2\0\7\200\1\u0264\33\200\1\0"+
    "\16\200\2\0\34\200\1\u044c\6\200\1\0\16\200\2\0"+
    "\27\200\2\u044d\7\200\1\u044d\2\200\1\0\7\200\1\u044d"+
    "\6\200\2\0\16\200\1\u044e\24\200\1\0\16\200\2\0"+
    "\43\200\1\u0444\16\200\2\0\20\200\1\u025f\22\200\1\0"+
    "\16\200\2\0\6\200\1\u044f\34\200\1\0\15\200\34\0"+
    "\1\u0309\40\0\1\u0450\65\0\1\u0451\3\0\1\u0452\7\0"+
    "\1\u0453\10\0\1\u0454\71\0\1\u0455\35\0\1\u0456\55\0"+
    "\1\u027c\110\0\1\u0457\56\0\2\u0458\7\0\1\u0458\12\0"+
    "\1\u0458\26\0\1\u0459\110\0\1\u045a\40\0\1\u0277\51\0"+
    "\1\u045b\106\0\1\u031b\52\0\1\u01f1\74\0\1\u0323\52\0"+
    "\1\u01fc\64\0\1\u045c\53\0\1\u045d\60\0\1\u045e\70\0"+
    "\1\u045f\70\0\1\u0173\57\0\1\u0460\70\0\1\u0461\50\0"+
    "\1\u0462\65\0\1\u0463\77\0\1\u0464\65\0\1\u0465\63\0"+
    "\1\u0230\45\0\1\u0230\72\0\1\u0466\63\0\1\u0467\63\0"+
    "\1\u0468\54\0\1\u0469\63\0\1\u043b\3\0\1\u043c\7\0"+
    "\1\u043d\73\0\1\u046a\47\0\1\u046b\100\0\1\u046c\42\0"+
    "\1\u046d\104\0\1\u046e\44\0\1\u046f\42\0\1\200\2\0"+
    "\17\200\1\u0470\23\200\1\0\16\200\2\0\17\200\1\u0471"+
    "\23\200\1\0\16\200\2\0\17\200\1\u0472\23\200\1\0"+
    "\16\200\2\0\10\200\1\u0473\32\200\1\0\16\200\2\0"+
    "\10\200\1\u0447\3\200\1\u0448\7\200\1\u0449\16\200\1\0"+
    "\16\200\2\0\20\200\1\u0474\22\200\1\0\16\200\2\0"+
    "\35\200\1\u0475\5\200\1\0\16\200\2\0\14\200\1\u0476"+
    "\26\200\1\0\16\200\2\0\16\200\1\u0477\24\200\1\0"+
    "\15\200\22\0\1\u0478\63\0\1\u0479\63\0\1\u047a\54\0"+
    "\1\u047b\63\0\1\u0451\3\0\1\u0452\7\0\1\u0453\73\0"+
    "\1\u047c\47\0\1\u047d\100\0\1\u047e\42\0\1\u047f\104\0"+
    "\1\u0480\44\0\1\u0481\52\0\1\u0482\72\0\1\u0483\57\0"+
    "\1\u0484\117\0\1\u0485\45\0\1\u0486\51\0\1\u0185\70\0"+
    "\1\u0487\61\0\1\u0488\54\0\1\u0489\70\0\1\u048a\56\0"+
    "\1\u048b\110\0\1\u0247\64\0\1\u048c\41\0\1\u043c\112\0"+
    "\1\u048d\41\0\1\u048e\100\0\1\u048f\61\0\1\u0490\51\0"+
    "\1\u0491\11\0\1\u0492\1\u0247\7\0\2\u0492\26\0\1\u0493"+
    "\47\0\1\200\2\0\10\200\1\u0494\32\200\1\0\16\200"+
    "\2\0\35\200\1\u025f\5\200\1\0\16\200\2\0\36\200"+
    "\1\u0495\4\200\1\0\16\200\2\0\14\200\1\u0448\26\200"+
    "\1\0\16\200\2\0\21\200\1\u0496\21\200\1\0\16\200"+
    "\2\0\36\200\1\u0497\4\200\1\0\16\200\2\0\34\200"+
    "\1\u0498\6\200\1\0\16\200\2\0\11\200\1\u0499\31\200"+
    "\1\0\15\200\13\0\1\u049a\110\0\1\u0277\64\0\1\u049b"+
    "\41\0\1\u0452\112\0\1\u049c\41\0\1\u049d\100\0\1\u049e"+
    "\61\0\1\u049f\51\0\1\u04a0\11\0\1\u04a1\1\u0277\7\0"+
    "\2\u04a1\26\0\1\u04a2\71\0\1\u04a3\52\0\1\u04a4\117\0"+
    "\1\u033c\27\0\1\u04a5\66\0\1\u04a6\74\0\1\u04a7\61\0"+
    "\1\u0185\63\0\1\u04a8\62\0\1\u04a9\55\0\1\u04aa\73\0"+
    "\1\u04ab\47\0\1\u04ac\10\0\1\u04ad\1\u04ae\2\0\1\u04af"+
    "\56\0\1\u0247\67\0\1\u04b0\47\0\1\u04b1\1\u04b2\4\0"+
    "\1\u04b3\3\0\1\u04b4\2\0\1\u04b5\47\0\1\u04b6\77\0"+
    "\1\u0491\11\0\1\u0492\1\u0247\7\0\2\u0492\1\u046e\36\0"+
    "\1\u0247\36\0\1\200\2\0\11\200\1\u04b7\31\200\1\0"+
    "\16\200\2\0\21\200\1\u04b8\21\200\1\0\16\200\2\0"+
    "\15\200\1\u025f\25\200\1\0\16\200\2\0\21\200\1\u04b9"+
    "\21\200\1\0\16\200\2\0\5\200\1\u04ba\1\u04bb\4\200"+
    "\1\u04bc\3\200\1\u04bd\2\200\1\u04be\20\200\1\0\16\200"+
    "\2\0\22\200\1\u025f\20\200\1\0\15\200\14\0\1\u04bf"+
    "\73\0\1\u04c0\47\0\1\u04c1\10\0\1\u04c2\1\u04c3\2\0"+
    "\1\u04c4\56\0\1\u0277\67\0\1\u04c5\47\0\1\u04c6\1\u04c7"+
    "\4\0\1\u04c8\3\0\1\u04c9\2\0\1\u04ca\47\0\1\u04cb"+
    "\77\0\1\u04a0\11\0\1\u04a1\1\u0277\7\0\2\u04a1\1\u0480"+
    "\36\0\1\u0277\61\0\1\u04cc\62\0\1\u04cd\65\0\1\u04ce"+
    "\57\0\1\u04cf\66\0\1\u04d0\65\0\1\u0185\67\0\1\u04d1"+
    "\57\0\1\u04d2\51\0\1\u04d3\74\0\1\u04d4\61\0\1\u04d5"+
    "\72\0\1\u04d6\46\0\1\u04d7\77\0\1\u04d8\44\0\1\u01a2"+
    "\2\0\1\u04d9\114\0\1\u0105\45\0\1\u04da\61\0\1\u04db"+
    "\52\0\1\u04dc\110\0\1\u04dd\22\0\1\200\2\0\22\200"+
    "\1\u04de\20\200\1\0\16\200\2\0\10\200\1\u04df\32\200"+
    "\1\0\16\200\2\0\25\200\1\u04e0\15\200\1\0\16\200"+
    "\2\0\6\200\1\u01bc\2\200\1\u04e1\31\200\1\0\16\200"+
    "\2\0\42\200\1\u011a\1\0\16\200\2\0\24\200\1\u04e2"+
    "\16\200\1\0\16\200\2\0\22\200\1\u04e3\20\200\1\0"+
    "\16\200\2\0\11\200\1\u04e4\31\200\1\0\15\200\25\0"+
    "\1\u04e5\51\0\1\u04e6\74\0\1\u04e7\61\0\1\u04e8\72\0"+
    "\1\u04e9\46\0\1\u04ea\77\0\1\u04eb\44\0\1\u01d7\2\0"+
    "\1\u04ec\114\0\1\u012f\45\0\1\u04ed\61\0\1\u04ee\52\0"+
    "\1\u04ef\110\0\1\u04f0\46\0\1\u033c\52\0\1\u033c\112\0"+
    "\1\u033c\45\0\1\u04f1\52\0\1\u04f2\74\0\1\u04f3\50\0"+
    "\1\u04f4\63\0\1\u04f5\71\0\1\u04f6\57\0\1\u04f7\7\0"+
    "\1\u04f8\57\0\1\u04f9\74\0\1\u04fa\75\0\1\u04fb\33\0"+
    "\1\u0247\61\0\1\u0247\76\0\1\u04fc\57\0\1\u04fc\70\0"+
    "\1\u0492\37\0\1\200\2\0\6\200\1\u04fd\34\200\1\0"+
    "\16\200\2\0\6\200\1\u04fe\34\200\1\0\16\200\2\0"+
    "\37\200\1\u04ff\3\200\1\0\16\200\2\0\7\200\1\u025f"+
    "\33\200\1\0\16\200\2\0\5\200\1\u025f\35\200\1\0"+
    "\16\200\2\0\20\200\1\u0500\22\200\1\0\16\200\2\0"+
    "\14\200\1\u0500\26\200\1\0\15\200\11\0\1\u0501\63\0"+
    "\1\u0502\71\0\1\u0503\57\0\1\u0504\7\0\1\u0505\57\0"+
    "\1\u0506\74\0\1\u0507\75\0\1\u0508\33\0\1\u0277\61\0"+
    "\1\u0277\76\0\1\u0509\57\0\1\u0509\70\0\1\u04a1\52\0"+
    "\1\u02cb\64\0\1\u050a\67\0\1\u050b\77\0\1\u03c8\63\0"+
    "\1\u050c\43\0\1\u050d\66\0\1\u050e\70\0\1\u050f\50\0"+
    "\1\u0510\74\0\1\u0511\63\0\1\u0512\65\0\1\u0513\37\0"+
    "\1\200\2\0\31\200\1\u03d5\11\200\1\0\16\200\2\0"+
    "\31\200\1\u0514\11\200\1\0\16\200\2\0\17\200\1\u0515"+
    "\23\200\1\0\16\200\2\0\21\200\1\u0516\21\200\1\0"+
    "\15\200\34\0\1\u03e2\63\0\1\u0517\43\0\1\u0518\66\0"+
    "\1\u0519\70\0\1\u051a\50\0\1\u051b\74\0\1\u051c\63\0"+
    "\1\u051d\65\0\1\u051e\47\0\1\u03af\72\0\1\u051f\70\0"+
    "\1\u0520\62\0\1\u0521\64\0\1\u0522\63\0\1\u0523\61\0"+
    "\1\u0524\70\0\1\u024c\54\0\1\u0525\61\0\1\u024c\45\0"+
    "\1\200\2\0\21\200\1\u0526\21\200\1\0\16\200\2\0"+
    "\15\200\1\u0527\25\200\1\0\16\200\2\0\13\200\1\u0264"+
    "\27\200\1\0\15\200\24\0\1\u0528\62\0\1\u0529\64\0"+
    "\1\u052a\63\0\1\u052b\61\0\1\u052c\70\0\1\u027c\54\0"+
    "\1\u052d\61\0\1\u027c\56\0\1\u03af\75\0\1\u0467\54\0"+
    "\1\u052e\62\0\1\u024c\73\0\1\u052f\53\0\1\u0530\73\0"+
    "\1\u0531\40\0\1\200\2\0\20\200\1\u0471\22\200\1\0"+
    "\16\200\2\0\20\200\1\u0532\22\200\1\0\15\200\23\0"+
    "\1\u0479\54\0\1\u0533\62\0\1\u027c\73\0\1\u0534\53\0"+
    "\1\u0535\73\0\1\u0536\57\0\1\u0537\55\0\1\u0538\70\0"+
    "\1\u0247\64\0\1\u0539\55\0\1\u053a\70\0\1\u0277\61\0"+
    "\1\u0247\66\0\1\u053b\60\0\1\u0277\66\0\1\u053c\66\0"+
    "\1\u048e\63\0\1\u049d\41\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[66768];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;
  private static final char[] EMPTY_BUFFER = new char[0];
  private static final int YYEOF = -1;
  private static java.io.Reader zzReader = null; // Fake

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\32\0\2\11\11\1\4\11\3\1\3\11\6\1\3\11"+
    "\5\1\1\11\4\1\1\11\1\1\1\11\6\1\1\11"+
    "\1\1\1\11\14\1\3\11\22\1\1\11\14\1\1\11"+
    "\1\1\1\11\37\1\1\11\1\1\1\11\1\1\2\11"+
    "\6\1\1\11\13\1\7\0\11\1\67\0\1\1\25\0"+
    "\24\1\1\0\1\1\57\0\11\1\21\0\1\11\14\0"+
    "\1\11\32\0\1\11\32\0\33\1\40\0\1\11\12\0"+
    "\1\11\4\0\1\11\6\0\11\1\17\0\1\1\6\0"+
    "\1\1\4\0\1\1\1\0\1\11\5\0\1\1\22\0"+
    "\1\11\21\0\30\1\6\0\1\11\43\0\1\11\5\0"+
    "\1\1\1\0\10\1\1\11\102\0\25\1\53\0\6\1"+
    "\10\0\1\11\55\0\17\1\37\0\1\11\1\0\4\1"+
    "\47\0\1\1\4\0\15\1\10\0\1\1\14\0\1\11"+
    "\1\0\3\1\23\0\1\1\14\0\14\1\30\0\1\1"+
    "\14\0\1\1\3\0\12\1\10\0\1\1\16\0\1\1"+
    "\10\0\10\1\1\0\1\1\32\0\6\1\35\0\10\1"+
    "\37\0\7\1\30\0\4\1\23\0\3\1\17\0\2\1"+
    "\12\0\1\1\12\0";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[1340];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** this buffer may contains the current text array to be matched when it is cheap to acquire it */
  private char[] zzBufferArray;

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the textposition at the last state to be included in yytext */
  private int zzPushbackPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /**
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;


  CndLexer(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  CndLexer(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 2304) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }

  public final int getTokenStart(){
    return zzStartRead;
  }

  public final int getTokenEnd(){
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end,int initialState){
    zzBuffer = buffer;
    zzBufferArray = com.intellij.util.text.CharArrayUtil.fromSequenceWithoutCopying(buffer);
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzPushbackPos = 0;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position <tt>pos</tt> from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBufferArray != null ? zzBufferArray[zzStartRead+pos]:zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() {
    if (!zzEOFDone) {
      zzEOFDone = true;
    
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;
    char[] zzBufferArrayL = zzBufferArray;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL)
            zzInput = (zzBufferArrayL != null ? zzBufferArrayL[zzCurrentPosL++] : zzBufferL.charAt(zzCurrentPosL++));
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = (zzBufferArrayL != null ? zzBufferArrayL[zzCurrentPosL++] : zzBufferL.charAt(zzCurrentPosL++));
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 29: 
          { yybegin(PROPERTY_DEFAULT_VALUE); return CndTypes.EQUAL;
          }
        case 55: break;
        case 4: 
          { yybegin(NAMESPACE); return CndTypes.LEFT_ANGLE_BRACKET;
          }
        case 56: break;
        case 42: 
          { return CndTypes.PROPERTY_MASK;
          }
        case 57: break;
        case 41: 
          { return CndTypes.COMMENT;
          }
        case 58: break;
        case 2: 
          { yybegin(YYINITIAL); return CndTypes.CRLF;
          }
        case 59: break;
        case 35: 
          { yybegin(NODE_NODETYPE); return CndTypes.NAMESPACE_NAME;
          }
        case 60: break;
        case 47: 
          { yybegin(PROPERTY_ATTRIBUTES); return CndTypes.PROPERTY_ATTRIBUTE;
          }
        case 61: break;
        case 9: 
          { return CndTypes.EQUAL;
          }
        case 62: break;
        case 23: 
          { yybegin(PROPERTY_TYPE); return CndTypes.LEFT_PARENTHESIS;
          }
        case 63: break;
        case 3: 
          { return TokenType.WHITE_SPACE;
          }
        case 64: break;
        case 32: 
          { return CndTypes.PROPERTY_CONSTRAINT_VALUE;
          }
        case 65: break;
        case 44: 
          { yybegin(NODE_ATTRIBUTES); return CndTypes.NODE_ATTRIBUTE;
          }
        case 66: break;
        case 43: 
          { return CndTypes.PROPERTY_TYPE;
          }
        case 67: break;
        case 21: 
          { yybegin(EXTEND_NAMESPACE); return CndTypes.COMMA;
          }
        case 68: break;
        case 20: 
          { yybegin(EXTEND); return CndTypes.NAMESPACE_NAME;
          }
        case 69: break;
        case 18: 
          { yybegin(SUPER_TYPES_NAMESPACE); return CndTypes.COMMA;
          }
        case 70: break;
        case 25: 
          { yybegin(PROPERTY_MASK_OPTION_NAME); return CndTypes.LEFT_BRACKET;
          }
        case 71: break;
        case 37: 
          { yybegin(NODE_DEFAULT); return CndTypes.RIGHT_PARENTHESIS;
          }
        case 72: break;
        case 22: 
          { return CndTypes.PROPERTY_NAME;
          }
        case 73: break;
        case 33: 
          { return CndTypes.NODE_NAME;
          }
        case 74: break;
        case 5: 
          { yybegin(PROPERTY); return CndTypes.MINUS;
          }
        case 75: break;
        case 11: 
          { yybegin(YYINITIAL); return CndTypes.RIGHT_ANGLE_BRACKET;
          }
        case 76: break;
        case 38: 
          { yybegin(NODE_DEFAULT_VALUE_NAMESPACE); return CndTypes.EQUAL;
          }
        case 77: break;
        case 10: 
          { return CndTypes.SINGLE_QUOTE;
          }
        case 78: break;
        case 52: 
          { yybegin(EXTENDS); return CndTypes.EXTENDS;
          }
        case 79: break;
        case 39: 
          { yybegin(NODE_DEFAULT_VALUE); return CndTypes.NAMESPACE_NAME;
          }
        case 80: break;
        case 53: 
          { yybegin(ITEMTYPE); return CndTypes.ITEMTYPE;
          }
        case 81: break;
        case 27: 
          { return CndTypes.PROPERTY_MASK_OPTION_VALUE;
          }
        case 82: break;
        case 45: 
          { return CndTypes.NODE_ATTRIBUTE;
          }
        case 83: break;
        case 24: 
          { return CndTypes.COMMA;
          }
        case 84: break;
        case 51: 
          { return CndTypes.ITEMTYPE_TYPE;
          }
        case 85: break;
        case 28: 
          { yybegin(PROPERTY_MASK_OPTION_NAME); return CndTypes.COMMA;
          }
        case 86: break;
        case 48: 
          { return CndTypes.PROPERTY_ATTRIBUTE;
          }
        case 87: break;
        case 16: 
          { return CndTypes.RIGHT_BRACKET;
          }
        case 88: break;
        case 1: 
          { return TokenType.BAD_CHARACTER;
          }
        case 89: break;
        case 30: 
          { yybegin(PROPERTY_CONSTRAINT); return CndTypes.LEFT_ANGLE_BRACKET;
          }
        case 90: break;
        case 40: 
          { yybegin(NODE_ATTRIBUTES); return CndTypes.NODE_TYPE_NAME;
          }
        case 91: break;
        case 14: 
          { yybegin(SUPER_TYPES_NAMESPACE); return CndTypes.RIGHT_ANGLE_BRACKET;
          }
        case 92: break;
        case 15: 
          { return CndTypes.COLON;
          }
        case 93: break;
        case 26: 
          { yybegin(PROPERTY_DEFAULT); return CndTypes.RIGHT_PARENTHESIS;
          }
        case 94: break;
        case 7: 
          { yybegin(NODE); return CndTypes.PLUS;
          }
        case 95: break;
        case 8: 
          { return CndTypes.NAMESPACE_NAME;
          }
        case 96: break;
        case 49: 
          { yybegin(OPTIONS); return CndTypes.OPTION;
          }
        case 97: break;
        case 6: 
          { yybegin(NODETYPE_NAMESPACE); return CndTypes.LEFT_BRACKET;
          }
        case 98: break;
        case 50: 
          { return CndTypes.OPTION;
          }
        case 99: break;
        case 12: 
          { yybegin(NODETYPE); return CndTypes.NAMESPACE_NAME;
          }
        case 100: break;
        case 46: 
          { yybegin(PROPERTY_MASK_OPTION); return CndTypes.PROPERTY_MASK_OPTION;
          }
        case 101: break;
        case 19: 
          { yybegin(EXTEND_NAMESPACE); return CndTypes.EQUAL;
          }
        case 102: break;
        case 34: 
          { yybegin(NODE_NAMESPACE); return CndTypes.LEFT_PARENTHESIS;
          }
        case 103: break;
        case 36: 
          { yybegin(NODE_NAMESPACE); return CndTypes.COMMA;
          }
        case 104: break;
        case 54: 
          { return CndTypes.NAMESPACE_URI;
          }
        case 105: break;
        case 31: 
          { yybegin(PROPERTY_ATTRIBUTES); return CndTypes.PROPERTY_DEFAULT_VALUE;
          }
        case 106: break;
        case 17: 
          { yybegin(SUPER_TYPES); return CndTypes.NAMESPACE_NAME;
          }
        case 107: break;
        case 13: 
          { return CndTypes.NODE_TYPE_NAME;
          }
        case 108: break;
        default:
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            zzDoEOF();
            return null;
          }
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
